import{_ as s,j as a,k as n,S as l}from"./chunks/framework.2ff57350.js";const o=JSON.parse('{"title":"秒速爬取100张原创插画","description":"","frontmatter":{},"headers":[],"relativePath":"tools/秒速爬100张原创插画.md","filePath":"tools/秒速爬100张原创插画.md"}'),p={name:"tools/秒速爬100张原创插画.md"},t=[l('<h1 id="秒速爬取100张原创插画" tabindex="-1">秒速爬取100张原创插画 <a class="header-anchor" href="#秒速爬取100张原创插画" aria-label="Permalink to &quot;秒速爬取100张原创插画&quot;">​</a></h1><p><strong>本文仅供学习交流</strong></p><h3 id="摘要" tabindex="-1">摘要 <a class="header-anchor" href="#摘要" aria-label="Permalink to &quot;摘要&quot;">​</a></h3><p>在本文中，我们将介绍如何利用 Python 程序快速爬取100张原创插画的图片。我们将通过获取数据和下载图片两个步骤来实现这个目标。请注意，本文中的代码仅供学习交流使用。</p><h3 id="_1-获取数据" tabindex="-1">1. 获取数据 <a class="header-anchor" href="#_1-获取数据" aria-label="Permalink to &quot;1. 获取数据&quot;">​</a></h3><p>在开始之前，我们需要获取插画数据。这里有两种情况：</p><p><strong>情况1：通过 Chrome 调试定位获取接口</strong></p><p>如果我们能够使用 Chrome 浏览器进行调试，并定位到获取插画数据的接口，那么我们可以直接通过该接口获取数据。具体步骤如下：</p><ol><li>打开 Chrome 浏览器并访问包含插画数据的网页。</li><li>打开开发者工具（可以通过右键菜单或快捷键打开）。</li><li>切换到 Network 面板，并清空所有已有的请求。</li><li>浏览网页时，观察 Network 面板中的请求，找到包含插画数据的接口。</li><li>点击该请求，查看请求详情，在 Headers 或 Preview 面板中找到响应数据。</li><li>将获取到的数据保存下来，用于后续的处理。</li></ol><p><strong>情况2：通过服务器端渲染（SSR）获取数据</strong></p><p>如果网页是通过服务器端渲染（SSR）加载的，我们无法直接定位到接口，需要使用 Selenium 等工具来获取页面代码，并通过正则表达式等方式解析数据。具体步骤如下：</p><ol><li>使用 Selenium 打开浏览器，并访问包含插画数据的网页。</li><li>获取页面代码，可以通过 Selenium 提供的相关方法来获取。</li><li>使用正则表达式等方式解析页面代码，提取出插画数据。</li><li>将获取到的数据保存下来，用于后续的处理。 <img src="https://c18e-1257416358.cos.accelerate.myqcloud.com/image-20230710110929493.png" alt="image-20230710110929493"><img src="https://c18e-1257416358.cos.accelerate.myqcloud.com/image-20230710111357125.png" alt="image-20230710111357125"><img src="https://c18e-1257416358.cos.accelerate.myqcloud.com/image-20230710111549381.png" alt="image-20230710111549381"><img src="https://c18e-1257416358.cos.accelerate.myqcloud.com/image-20230710111845101.png" alt="image-20230710111845101"></li></ol><h3 id="_2-下载图片" tabindex="-1">2. 下载图片 <a class="header-anchor" href="#_2-下载图片" aria-label="Permalink to &quot;2. 下载图片&quot;">​</a></h3><p>获取到插画数据后，我们可以根据数据中的图片地址进行下载。具体步骤如下：</p><ol><li>创建一个线程池，用于并发下载图片。</li><li>遍历插画数据，提取每张插画的图片地址。</li><li>对于每个图片地址，创建一个下载任务，使用多线程的方式进行下载。</li><li>在下载任务中，发送 HTTP 请求获取图片数据，并将数据保存到本地文件。</li><li>等待所有下载任务完成，确保所有图片都已经下载完毕。</li></ol><h3 id="_3-编写代码" tabindex="-1">3. 编写代码 <a class="header-anchor" href="#_3-编写代码" aria-label="Permalink to &quot;3. 编写代码&quot;">​</a></h3><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> json</span></span>\n<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> httpx</span></span>\n<span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> concurrent</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">futures </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> ThreadPoolExecutor</span></span></code></pre></div><ul><li>导入所需的模块：<code>json</code> 用于处理 JSON 数据，<code>httpx</code> 用于发送 HTTP 请求，<code>ThreadPoolExecutor</code> 用于创建线程池。</li></ul><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">get_data</span><span style="color:#89DDFF;">():</span></span>\n<span class="line"><span style="color:#A6ACCD;">    url </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">https://api.huaban.com/discovery/illustration</span><span style="color:#89DDFF;">&quot;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    params </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">limit</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">100</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">max</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">5588131249</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#A6ACCD;">    headers </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#676E95;font-style:italic;"># 头部信息，包含请求的cookie、user-agent等</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#A6ACCD;">    response </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> httpx</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">url</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;font-style:italic;">headers</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">headers</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;font-style:italic;">params</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">params</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> response</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">status_code</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">200</span><span style="color:#89DDFF;">:</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> response</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">json</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">get</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">pins</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">[])</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#89DDFF;">:</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[]</span></span></code></pre></div><ul><li>定义 <code>get_data</code> 函数，用于获取数据。</li><li>指定 API 的 URL 和参数。</li><li>设置请求的头部信息。</li><li>发送 GET 请求，获取响应。</li><li>检查响应状态码是否为 200，如果是，则解析响应的 JSON 数据并返回其中的 <code>&quot;pins&quot;</code> 字段的值，否则返回空列表。</li></ul><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">download_images</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">url</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">filename</span><span style="color:#89DDFF;">):</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">with</span><span style="color:#A6ACCD;"> httpx</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">stream</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">GET</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> url</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#A6ACCD;"> response</span><span style="color:#89DDFF;">:</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">with</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">open</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">filename</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">wb</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#A6ACCD;"> f</span><span style="color:#89DDFF;">:</span></span>\n<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> chunk </span><span style="color:#89DDFF;font-style:italic;">in</span><span style="color:#A6ACCD;"> response</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">iter_bytes</span><span style="color:#89DDFF;">():</span></span>\n<span class="line"><span style="color:#A6ACCD;">                f</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">write</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">chunk</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">f</span><span style="color:#C3E88D;">&quot;</span><span style="color:#F78C6C;">{</span><span style="color:#82AAFF;">filename</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;"> 下载完成！&quot;</span><span style="color:#89DDFF;">)</span></span></code></pre></div><ul><li>定义 <code>download_images</code> 函数，用于下载图片。</li><li>使用 <code>httpx.stream</code> 发送 GET 请求，获取响应流。</li><li>打开文件，将响应数据写入文件。</li><li>打印下载完成的提示信息。</li></ul><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> __name__ </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">__main__</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span></span>\n<span class="line"><span style="color:#A6ACCD;">    data </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">get_data</span><span style="color:#89DDFF;">()</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">f</span><span style="color:#C3E88D;">&quot;共有</span><span style="color:#F78C6C;">{</span><span style="color:#82AAFF;">len</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">data</span><span style="color:#89DDFF;">)</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">个文件开始下载&quot;</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">    executor </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">ThreadPoolExecutor</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">max_workers</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">500</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> item </span><span style="color:#89DDFF;font-style:italic;">in</span><span style="color:#A6ACCD;"> data</span><span style="color:#89DDFF;">:</span></span>\n<span class="line"><span style="color:#A6ACCD;">        key </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> item</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">file</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">{}).</span><span style="color:#82AAFF;">get</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">key</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">not</span><span style="color:#A6ACCD;"> key</span><span style="color:#89DDFF;">:</span></span>\n<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;font-style:italic;">continue</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">        url </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">f</span><span style="color:#C3E88D;">&quot;https://gd-hbimg.huaban.com/</span><span style="color:#F78C6C;">{</span><span style="color:#A6ACCD;">key</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">_fw480webp&quot;</span></span>\n<span class="line"><span style="color:#A6ACCD;">        filename </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">f</span><span style="color:#C3E88D;">&quot;imgs/</span><span style="color:#F78C6C;">{</span><span style="color:#A6ACCD;">key</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">.webp&quot;</span></span>\n<span class="line"><span style="color:#A6ACCD;">        executor</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">submit</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">download_images</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> url</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> filename</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">    executor</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">shutdown</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">wait</span><span style="color:#89DDFF;">=True)</span></span></code></pre></div><ul><li>在 <code>__name__ == &quot;__main__&quot;</code> 的条件下执行以下代码块。</li><li>调用 <code>get_data</code> 函数，获取插画数据，并打印下载文件数量的信息。</li><li>创建线程池执行器 <code>executor</code>，最大工作线程数为 500。</li><li>遍历数据中的每个元素，提取图片的关键信息。</li><li>构建图片的 URL 和保存的文件名。</li><li>使用线程池执行器提交下载任务，将图片的 URL 和文件名传递给 <code>download_images</code> 函数进行下载。</li><li>等待所有下载任务完成后关闭线程池。</li></ul><p>完整代码</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> json</span></span>\n<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> httpx</span></span>\n<span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> concurrent</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">futures </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> ThreadPoolExecutor</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">get_data</span><span style="color:#89DDFF;">():</span></span>\n<span class="line"><span style="color:#A6ACCD;">    url </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">https://api.huaban.com/discovery/illustration</span><span style="color:#89DDFF;">&quot;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">    params </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">limit</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">100</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">max</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">5588131249</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">    headers </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">cookie</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">user_device_id=1b8a9e842cda4dfc83392d3950ac7c0e; user_device_id_timestamp=1688952997879; Hm_lvt_d4a0e7c3cd16eb58a65472f40e7ee543=1688952998; Hm_up_d4a0e7c3cd16eb58a65472f40e7ee543=%7B%22version</span><span style="color:#F78C6C;">%22%</span><span style="color:#C3E88D;">3A%7B%22value</span><span style="color:#F78C6C;">%22%</span><span style="color:#C3E88D;">3A%222.0.0</span><span style="color:#F78C6C;">%22%</span><span style="color:#C3E88D;">2C</span><span style="color:#F78C6C;">%22s</span><span style="color:#C3E88D;">cope</span><span style="color:#F78C6C;">%22%</span><span style="color:#C3E88D;">3A1%7D%2C</span><span style="color:#F78C6C;">%22ha</span><span style="color:#C3E88D;">s_plugin</span><span style="color:#F78C6C;">%22%</span><span style="color:#C3E88D;">3A%7B%22value</span><span style="color:#F78C6C;">%22%</span><span style="color:#C3E88D;">3A</span><span style="color:#F78C6C;">%220%</span><span style="color:#C3E88D;">22%2C</span><span style="color:#F78C6C;">%22s</span><span style="color:#C3E88D;">cope</span><span style="color:#F78C6C;">%22%</span><span style="color:#C3E88D;">3A1%7D%7D; _gid=GA1.2.1601091990.1688952998; aliyungf_tc=1c0de47c75c109b66f5d448fdbd463121af41b30c6c0edbba3a10e752a3c6ddb; sid=s%3ALrlT63DV6NFuC9Kl9kOdUsFEwWcAGl0v.kUB0XzR0tHJNIbNLPlgt2OLp3FQRzZiQqek</span><span style="color:#F78C6C;">%2F</span><span style="color:#C3E88D;">gbWRCnk; _ga_50RYEM7F09=GS1.1.1688952998.1.1.1688955222.0.0.0; Hm_lpvt_d4a0e7c3cd16eb58a65472f40e7ee543=1688955224; _ga=GA1.2.332528593.1688952998; _gat_UA-135559536-2=1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">user-agent</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">authority</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">api.huaban.com</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">accept</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">application/json, text/plain, */*</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">accept-language</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">zh-CN,zh;q=0.9,en;q=0.8,de;q=0.7</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">cache-control</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">no-cache</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">origin</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">https://huaban.com</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">pragma</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">no-cache</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">referer</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">https://huaban.com/discovery/illustration?sort=1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">sec-ch-ua</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">f</span><span style="color:#C3E88D;">&#39;&quot;Not.A/Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;114&quot;, &quot;Google Chrome&quot;;v=&quot;114&quot;&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">sec-ch-ua-mobile</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">?0</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">sec-ch-ua-platform</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">&quot;macOS&quot;</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">sec-fetch-dest</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">empty</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">sec-fetch-mode</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">cors</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">sec-fetch-site</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">same-site</span><span style="color:#89DDFF;">&quot;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">    response </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> httpx</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">url</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;font-style:italic;">headers</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">headers</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;font-style:italic;">params</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">params</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> response</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">status_code</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">200</span><span style="color:#89DDFF;">:</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> response</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">json</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">get</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">pins</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">[])</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#89DDFF;">:</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[]</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">download_images</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">url</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">filename</span><span style="color:#89DDFF;">):</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">with</span><span style="color:#A6ACCD;"> httpx</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">stream</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">GET</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> url</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#A6ACCD;"> response</span><span style="color:#89DDFF;">:</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">with</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">open</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">filename</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">wb</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#A6ACCD;"> f</span><span style="color:#89DDFF;">:</span></span>\n<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> chunk </span><span style="color:#89DDFF;font-style:italic;">in</span><span style="color:#A6ACCD;"> response</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">iter_bytes</span><span style="color:#89DDFF;">():</span></span>\n<span class="line"><span style="color:#A6ACCD;">                f</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">write</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">chunk</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">f</span><span style="color:#C3E88D;">&quot;</span><span style="color:#F78C6C;">{</span><span style="color:#82AAFF;">filename</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;"> 下载完成！&quot;</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> __name__ </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">__main__</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span></span>\n<span class="line"><span style="color:#A6ACCD;">    data </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">get_data</span><span style="color:#89DDFF;">()</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">f</span><span style="color:#C3E88D;">&quot;共有</span><span style="color:#F78C6C;">{</span><span style="color:#82AAFF;">len</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">data</span><span style="color:#89DDFF;">)</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">个文件开始下载&quot;</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">    executor </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">ThreadPoolExecutor</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">max_workers</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">500</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> item </span><span style="color:#89DDFF;font-style:italic;">in</span><span style="color:#A6ACCD;"> data</span><span style="color:#89DDFF;">:</span></span>\n<span class="line"><span style="color:#A6ACCD;">        key </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> item</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">file</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">{}).</span><span style="color:#82AAFF;">get</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">key</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">not</span><span style="color:#A6ACCD;"> key</span><span style="color:#89DDFF;">:</span></span>\n<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;font-style:italic;">continue</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">        url </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">f</span><span style="color:#C3E88D;">&quot;https://gd-hbimg.huaban.com/</span><span style="color:#F78C6C;">{</span><span style="color:#A6ACCD;">key</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">_fw480webp&quot;</span></span>\n<span class="line"><span style="color:#A6ACCD;">        filename </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">f</span><span style="color:#C3E88D;">&quot;imgs/</span><span style="color:#F78C6C;">{</span><span style="color:#A6ACCD;">key</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">.webp&quot;</span></span>\n<span class="line"><span style="color:#A6ACCD;">        executor</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">submit</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">download_images</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> url</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> filename</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">    executor</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">shutdown</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">wait</span><span style="color:#89DDFF;">=True)</span></span></code></pre></div><p>通过以上代码，我们可以将获取数据和下载图片分别封装成两个函数。使用 <code>httpx</code> 库发送 HTTP 请求，并使用线程池来提高并发处理能力。首先通过 <code>get_data</code> 函数获取插画数据，然后遍历数据列表，提取每个图片的关键信息，拼接出图片的下载地址，最后通过 <code>download_images</code> 函数下载图片并保存到本地。</p><p>请注意，本示例仅供学习交流，请遵守法律法规和网站规则，不要滥用爬虫技术。</p>',28)];const e=s(p,[["render",function(s,l,o,p,e,c){return a(),n("div",null,t)}]]);export{o as __pageData,e as default};
