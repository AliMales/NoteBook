import{_ as s,j as a,k as n,S as l}from"./chunks/framework.2ff57350.js";const p=JSON.parse('{"title":"Git指南","description":"","frontmatter":{},"headers":[],"relativePath":"note/git & github 指南.md","filePath":"note/git & github 指南.md"}'),o={name:"note/git & github 指南.md"},t=[l('<h1 id="git指南" tabindex="-1">Git指南 <a class="header-anchor" href="#git指南" aria-label="Permalink to &quot;Git指南&quot;">​</a></h1><p>git是世界上最先进的发布式版本控制系统</p><h2 id="git常用命令" tabindex="-1"><strong>git常用命令</strong> <a class="header-anchor" href="#git常用命令" aria-label="Permalink to &quot;**git常用命令**&quot;">​</a></h2><table><thead><tr><th>代码</th><th>注释</th></tr></thead><tbody><tr><td><code>git init</code></td><td>初始化仓库</td></tr><tr><td><code>git remote add origin URL</code></td><td>绑定远程地址</td></tr><tr><td><code>git add .</code></td><td>添加所有改动</td></tr><tr><td><code>git commit -m NAME</code></td><td>提交本次添加并为其命名</td></tr><tr><td><code>git push</code></td><td>提交到远程仓库</td></tr><tr><td><code>git stash </code></td><td>保存当前修改</td></tr><tr><td><code>git stash pop</code></td><td>拆包当前修改</td></tr></tbody></table><p><img src="https://c18e-1257416358.cos.accelerate.myqcloud.com/uPic/image-20191216113953773.png" alt="image-20191216113953773"></p><h2 id="git强制拉取远程仓库覆盖本地" tabindex="-1"><strong>git强制拉取远程仓库覆盖本地</strong> <a class="header-anchor" href="#git强制拉取远程仓库覆盖本地" aria-label="Permalink to &quot;**git强制拉取远程仓库覆盖本地**&quot;">​</a></h2><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">fetch</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--all</span><span style="color:#A6ACCD;">                </span><span style="color:#C3E88D;">//从另一个存储库下载对象和引用</span></span>\n<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">reset</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--hard</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">origin/master</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">//放弃本地修改</span></span>\n<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">pull</span><span style="color:#A6ACCD;">                       </span><span style="color:#C3E88D;">//开始更新</span></span></code></pre></div><h2 id="git协助流程" tabindex="-1"><strong>git协助流程</strong> <a class="header-anchor" href="#git协助流程" aria-label="Permalink to &quot;**git协助流程**&quot;">​</a></h2><p>多人协作是强大的功能之一。</p><p>多人协作（workflow）必须有一个规范流程，使得项目井井有条的进行。</p><p><img src="https://c18e-1257416358.cos.accelerate.myqcloud.com/uPic/image-20191115142922654.png" alt="image-20191115142922654"></p><p>可以把git抽象为仓库，当执行 git init 命令的时候，文件夹就初始化了一个.git文件夹仓库， 文件夹里的文件以git自己的方式记录当前文件夹的变化，一般来说为了防止用户误操作文件夹破坏仓库完整性，文件夹默认是隐藏的。</p><p>当使用git必须要掌握几个术语：</p><ul><li>仓库（Repository）：一个完整的git项目</li><li>分支（branch）：拥有自己历史信息的时间线</li><li>工作区（Workspace）：本地的仓库的提交暂存</li><li>暂存区（index）:本地代码和远程有冲突的时候可以先存到暂存区</li></ul><p>假设作家的写作流程举例可以按照以下步骤进行：</p><ol><li><p>初始化仓库：创建一个Git仓库用于管理作家的写作内容。这可以在本地或远程代码托管平台（如GitHub、GitLab）上创建。</p></li><li><p>提交本地仓库：每次写作完成后，将写作内容提交到本地仓库。这可以通过以下步骤完成：</p><ul><li>将写作完成的文件或修改添加到暂存区：<div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">git add .       // 将所有修改添加到暂存区</span></span></code></pre></div></li><li>提交修改并添加描述信息：<div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">git commit -m &quot;写作完成&quot;    // 提交修改并添加描述信息</span></span></code></pre></div></li></ul><p>这样就在本地仓库中记录了写作的提交历史。</p></li><li><p>提交远程仓库：将本地仓库的写作内容同步到远程仓库，以备份和分享。可以使用以下命令将本地仓库的内容推送到远程仓库：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">git push origin main    // 推送本地仓库的内容到远程仓库的主分支（以main为例）</span></span></code></pre></div><p>这样远程仓库就会记录下所有的写作提交记录，可以在不同设备上进行同步。</p></li></ol><p>对于作者在多个设备上写作的情况，可以按照以下步骤进行：</p><ol><li><p>在公司电脑上克隆仓库：在公司电脑上使用Git命令克隆作者的写作仓库到本地：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">git clone &lt;远程仓库地址&gt;    // 克隆远程仓库到本地</span></span></code></pre></div></li><li><p>写作提交本地仓库：在公司电脑上进行写作，完成后提交修改到本地仓库，与之前的步骤相同。</p></li><li><p>提交远程仓库：将公司电脑上的写作内容推送到远程仓库，与之前的步骤相同。</p></li></ol><p>这样，无论是在家里的电脑还是公司的电脑上进行写作，都可以通过克隆仓库和提交远程仓库的方式进行同步。</p><p>针对你提到的两种常见情况，可以采取以下解决方法：</p><ol><li><p>忘记提交情况：如果在家里写了文章但忘记提交，而已经到了公司，可以按照以下步骤处理：</p><ul><li>在家里的电脑上，先保存当前的写作内容，暂存起来。</li><li>在公司的电脑上，先拉取家里电脑上最新的提交内容。</li><li>在公司电脑上继续写作，并提交修改到本地仓库和远程仓库。</li><li>回到家后，先将家里电脑上保存的写作内容恢复到工作区，并提交修改到本地仓库和</li></ul></li></ol><p>远程仓库。</p><p>这样可以保证家里和公司的写作内容保持同步。</p><ol start="2"><li><p>没有拉取最新提交情况：如果在家里提交了修改，但到了公司没有拉取最新的提交内容，可以按照以下步骤处理：</p><ul><li>在公司的电脑上，先拉取远程仓库的最新代码，将家里的提交内容合并到工作区。</li><li>继续在公司电脑上完成写作，并提交修改到本地仓库和远程仓库。</li></ul><p>这样可以解决忘记拉取的问题，保证写作内容的连续性。</p></li></ol><p>对于连载网络版本的新书发布，可以按照以下步骤进行：</p><ol><li><p>创建新的分支：为每次新书发布创建一个新的分支，例如命名为&quot;release&quot;。可以使用以下命令创建并切换到该分支：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">git checkout -b release    // 创建并切换到release分支</span></span></code></pre></div></li><li><p>提交发布内容：每次发布新书的内容，完成后将修改提交到本地仓库和远程仓库。</p></li><li><p>连载内容管理：创建第二个分支用于连载的内容，例如命名为&quot;serialization&quot;。这个分支的内容与发布分支相同，但是在这个分支上进行连载内容的编辑，直到需要发布时再将连载内容同步到发布分支。</p></li></ol><p>注意事项：</p><ul><li>分支的远程与本地同步：在创建分支后，可以使用<code>git push origin &lt;分支名&gt;</code>将本地分支推送到远程仓库，保持分支在本地和远程的同步。</li><li>分支的管理：根据不同的分支功能和目的，合理进行分支的创建、切换和合并操作。</li><li>多人分支提交冲突：如果多个人在同一个分支上进行写作并提交，可能会导致冲突。在提交前，可以先拉取远程仓库的最新代码，解决冲突后再提交修改。</li><li>提交错误回退：如果不小心提交了错误的内容，可以使用<code>git reset</code>或<code>git revert</code>命令进行撤销或回退操作，以恢复到正确的状态。</li></ul><p>综上所述，通过以上的写作流程和注意事项，作者可以高效地进行写作，并与团队成员进行协作，管理和维护项目的代码和内容。这样能够确保写作内容的连贯性和版本控制的有效性。</p><p>关于git的使用</p><p>团队开发中，遵循一个合理、清晰的Git使用流程，是非常重要的。</p><p>否则，每个人都提交一堆杂乱无章的commit，项目很快就会变得难以协调和维护。</p><p>下面是<a href="https://github.com/thoughtbot/guides/tree/master/protocol/git" target="_blank" rel="noreferrer">ThoughtBot</a> 的Git使用规范流程。我从中学到了很多，推荐你也这样使用Git。</p><p><img src="https://c18e-1257416358.cos.accelerate.myqcloud.com/uPic/bg2015080501.png" alt="img"></p><h2 id="第一步-新建分支" tabindex="-1">第一步：新建分支 <a class="header-anchor" href="#第一步-新建分支" aria-label="Permalink to &quot;第一步：新建分支&quot;">​</a></h2><p>首先，每次开发新功能，都应该新建一个单独的分支。</p><blockquote><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 获取主干最新代码</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">checkout</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">master</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">pull</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 新建一个开发分支myfeature</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">checkout</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-b</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">myfeature</span></span></code></pre></div></blockquote><h2 id="第二步-提交分支commit" tabindex="-1">第二步：提交分支commit <a class="header-anchor" href="#第二步-提交分支commit" aria-label="Permalink to &quot;第二步：提交分支commit&quot;">​</a></h2><p>分支修改后，就可以提交commit了。</p><blockquote><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">add</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--all</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">status</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">commit</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--verbose</span></span></code></pre></div></blockquote><p>git add 命令的all参数，表示保存所有变化（包括新建、修改和删除）。从Git 2.0开始，all是 git add 的默认参数，所以也可以用 git add . 代替。</p><p>git status 命令，用来查看发生变动的文件。</p><p>git commit 命令的verbose参数，会列出diff 的结果。</p><h2 id="第三步-撰写提交信息" tabindex="-1">第三步：撰写提交信息 <a class="header-anchor" href="#第三步-撰写提交信息" aria-label="Permalink to &quot;第三步：撰写提交信息&quot;">​</a></h2><p>提交commit时，必须给出完整扼要的提交信息，下面是一个范本。</p><blockquote><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">Present-tense</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">summary</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">under</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">50</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">characters</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> More information about commit </span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">under</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">72</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">characters</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">.</span></span>\n<span class="line"><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> More information about commit </span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">under</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">72</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">characters</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">.</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#FFCB6B;">http://project.management-system.com/ticket/123</span></span></code></pre></div></blockquote><p>第一行是不超过50个字的提要，然后空一行，罗列出改动原因、主要变动、以及需要注意的问题。最后，提供对应的网址（比如Bug ticket）。</p><h2 id="第四步-与主干同步" tabindex="-1">第四步：与主干同步 <a class="header-anchor" href="#第四步-与主干同步" aria-label="Permalink to &quot;第四步：与主干同步&quot;">​</a></h2><p>分支的开发过程中，要经常与主干保持同步。</p><blockquote><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">fetch</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">origin</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">rebase</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">origin/master</span></span></code></pre></div></blockquote><h2 id="第五步-合并commit" tabindex="-1">第五步：合并commit <a class="header-anchor" href="#第五步-合并commit" aria-label="Permalink to &quot;第五步：合并commit&quot;">​</a></h2><p>分支开发完成后，很可能有一堆commit，但是合并到主干的时候，往往希望只有一个（或最多两三个）commit，这样不仅清晰，也容易管理。</p><p>那么，怎样才能将多个commit合并呢？这就要用到 git rebase 命令。</p><blockquote><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">rebase</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-i</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">origin/master</span></span></code></pre></div></blockquote><p>git rebase命令的i参数表示互动（interactive），这时git会打开一个互动界面，进行下一步操作。</p><p>下面采用<a href="https://robots.thoughtbot.com/git-interactive-rebase-squash-amend-rewriting-history" target="_blank" rel="noreferrer">Tute Costa</a>的例子，来解释怎么合并commit。</p><blockquote><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">pick</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">07</span><span style="color:#C3E88D;">c5abd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Introduce</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">OpenPGP</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">and</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">teach</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">basic</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">usage</span></span>\n<span class="line"><span style="color:#FFCB6B;">pick</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">de9b1eb</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Fix</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">PostChecker::Post#urls</span></span>\n<span class="line"><span style="color:#FFCB6B;">pick</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#C3E88D;">e7ee36</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Hey</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">kids,</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">stop</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">all</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">the</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">highlighting</span></span>\n<span class="line"><span style="color:#FFCB6B;">pick</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">fa20af3</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">interactive</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">rebase,</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">squash,</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">amend</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># Rebase 8db7e8b..fa20af3 onto 8db7e8b</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">#</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># Commands:</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">#  p, pick = use commit</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">#  r, reword = use commit, but edit the commit message</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">#  e, edit = use commit, but stop for amending</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">#  s, squash = use commit, but meld into previous commit</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">#  f, fixup = like &quot;squash&quot;, but discard this commit&#39;s log message</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">#  x, exec = run command (the rest of the line) using shell</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">#</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># These lines can be re-ordered; they are executed from top to bottom.</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">#</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># If you remove a line here THAT COMMIT WILL BE LOST.</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">#</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># However, if you remove everything, the rebase will be aborted.</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">#</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># Note that empty commits are commented out</span></span></code></pre></div></blockquote><p>上面的互动界面，先列出当前分支最新的4个commit（越下面越新）。每个commit前面有一个操作命令，默认是pick，表示该行commit被选中，要进行rebase操作。</p><p>4个commit的下面是一大堆注释，列出可以使用的命令。</p><blockquote><ul><li>pick：正常选中</li><li>reword：选中，并且修改提交信息；</li><li>edit：选中，rebase时会暂停，允许你修改这个commit</li><li>squash：选中，会将当前commit与上一个commit合并</li><li>fixup：与squash相同，但不会保存当前commit的提交信息</li><li>exec：执行其他shell命令</li></ul></blockquote><p>上面这6个命令当中，squash和fixup可以用来合并commit。先把需要合并的commit前面的动词，改成squash（或者s）。</p><blockquote><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">pick</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">07</span><span style="color:#C3E88D;">c5abd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Introduce</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">OpenPGP</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">and</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">teach</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">basic</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">usage</span></span>\n<span class="line"><span style="color:#FFCB6B;">s</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">de9b1eb</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Fix</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">PostChecker::Post#urls</span></span>\n<span class="line"><span style="color:#FFCB6B;">s</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#C3E88D;">e7ee36</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Hey</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">kids,</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">stop</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">all</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">the</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">highlighting</span></span>\n<span class="line"><span style="color:#FFCB6B;">pick</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">fa20af3</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">interactive</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">rebase,</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">squash,</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">amend</span></span></code></pre></div></blockquote><p>这样一改，执行后，当前分支只会剩下两个commit。第二行和第三行的commit，都会合并到第一行的commit。提交信息会同时包含，这三个commit的提交信息。</p><blockquote><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># This is a combination of 3 commits.</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># The first commit&#39;s message is:</span></span>\n<span class="line"><span style="color:#FFCB6B;">Introduce</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">OpenPGP</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">and</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">teach</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">basic</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">usage</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># This is the 2nd commit message:</span></span>\n<span class="line"><span style="color:#FFCB6B;">Fix</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">PostChecker::Post#urls</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># This is the 3rd commit message:</span></span>\n<span class="line"><span style="color:#FFCB6B;">Hey</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">kids,</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">stop</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">all</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">the</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">highlighting</span></span></code></pre></div></blockquote><p>如果将第三行的squash命令改成fixup命令。</p><blockquote><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">pick</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">07</span><span style="color:#C3E88D;">c5abd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Introduce</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">OpenPGP</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">and</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">teach</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">basic</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">usage</span></span>\n<span class="line"><span style="color:#FFCB6B;">s</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">de9b1eb</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Fix</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">PostChecker::Post#urls</span></span>\n<span class="line"><span style="color:#FFCB6B;">f</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#C3E88D;">e7ee36</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Hey</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">kids,</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">stop</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">all</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">the</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">highlighting</span></span>\n<span class="line"><span style="color:#FFCB6B;">pick</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">fa20af3</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">interactive</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">rebase,</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">squash,</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">amend</span></span></code></pre></div></blockquote><p>运行结果相同，还是会生成两个commit，第二行和第三行的commit，都合并到第一行的commit。但是，新的提交信息里面，第三行commit的提交信息，会被注释掉。</p><blockquote><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># This is a combination of 3 commits.</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># The first commit&#39;s message is:</span></span>\n<span class="line"><span style="color:#FFCB6B;">Introduce</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">OpenPGP</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">and</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">teach</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">basic</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">usage</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># This is the 2nd commit message:</span></span>\n<span class="line"><span style="color:#FFCB6B;">Fix</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">PostChecker::Post#urls</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># This is the 3rd commit message:</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># Hey kids, stop all the highlighting</span></span></code></pre></div></blockquote><p><a href="http://ponyfoo.com/articles/git-github-hacks" target="_blank" rel="noreferrer">Pony Foo</a>提出另外一种合并commit的简便方法，就是先撤销过去5个commit，然后再建一个新的。</p><blockquote><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">reset</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">HEAD~5</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">add</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">.</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">commit</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-am</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Here&#39;s the bug fix that closes #28</span><span style="color:#89DDFF;">&quot;</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">push</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--force</span></span></code></pre></div></blockquote><p>squash和fixup命令，还可以当作命令行参数使用，自动合并commit。</p><blockquote><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">commit</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--fixup</span><span style="color:#A6ACCD;">  </span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">rebase</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-i</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--autosquash</span></span></code></pre></div></blockquote><h2 id="第六步-推送到远程仓库" tabindex="-1">第六步：推送到远程仓库 <a class="header-anchor" href="#第六步-推送到远程仓库" aria-label="Permalink to &quot;第六步：推送到远程仓库&quot;">​</a></h2><p>合并commit后，就可以推送当前分支到远程仓库了。</p><blockquote><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">push</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--force</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">origin</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">myfeature</span></span></code></pre></div></blockquote><p>git push命令要加上force参数，因为rebase以后，分支历史改变了，跟远程分支不一定兼容，有可能要强行推送</p><h2 id="第七步-发出pull-request" tabindex="-1">第七步：发出Pull Request <a class="header-anchor" href="#第七步-发出pull-request" aria-label="Permalink to &quot;第七步：发出Pull Request&quot;">​</a></h2><p>提交到远程仓库以后，就可以发出 Pull Request 到master分支，然后请求别人进行代码review，确认可以合并到master。</p><h2 id="基本配置" tabindex="-1">基本配置 <a class="header-anchor" href="#基本配置" aria-label="Permalink to &quot;基本配置&quot;">​</a></h2><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 查看当前生效的配置信息</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">config</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-l</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 配置提交用户信息，--global代表全局</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">config</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--global</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">user.name</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">用户</span><span style="color:#A6ACCD;">名</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">config</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--global</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">user.email</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">邮箱地</span><span style="color:#A6ACCD;">址</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 更改Git缓存区的大小</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 缓存大小单位：B，例如：524288000（500MB）</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">config</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--global</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">http.postBuffer</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">缓存大</span><span style="color:#A6ACCD;">小</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 配置可以缓存密码，默认缓存时间15分钟</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 缓存时间单位：秒</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">config</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--global</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">credential.helper</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">cache --timeout=&lt;缓存时间&gt;</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 配置长期存储密码</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">config</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--global</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">credential.helper</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">store</span></span></code></pre></div><h2 id="基础操作" tabindex="-1">基础操作 <a class="header-anchor" href="#基础操作" aria-label="Permalink to &quot;基础操作&quot;">​</a></h2><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 初始化本地仓库，在当前目录下生成 .git 文件夹</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">init</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 查看本地仓库的状态</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">status</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 把指定1个或多个文件添加到暂存区中</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">add</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">文件路</span><span style="color:#A6ACCD;">径</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 将工作区所有变化提交到暂存区，包括修改、新文件和删除文件。</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">add</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">.</span><span style="color:#A6ACCD;"> </span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">add</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-A</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">文件路</span><span style="color:#A6ACCD;">径</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">add</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--all</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">文件路</span><span style="color:#A6ACCD;">径</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 添加所有修改、已删除的文件到暂存区中，不包含新增文件</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">add</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-u</span><span style="color:#A6ACCD;"> [&lt;文件路径&gt;]</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 移除跟踪指定的文件，并从本地仓库的文件夹中删除</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">rm</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">文件路</span><span style="color:#A6ACCD;">径</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 移除跟踪指定的文件夹，并从本地仓库的文件夹中删除</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">rm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-r</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">文件夹路</span><span style="color:#A6ACCD;">径</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 移除跟踪指定的文件，在本地仓库的文件夹中保留该文件</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">rm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--cached</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 撤消工作区对文件的修改, 慎用</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">checkout</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">文件</span><span style="color:#A6ACCD;">名</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 把暂存区中的文件提交到本地仓库中并添加描述信息</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">commit</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-m</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">&lt;提交的描述信息&gt;</span><span style="color:#89DDFF;">&quot;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 修改上次提交的描述信息</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">commit</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--amend</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 打印所有的提交记录，使用--oneline选项可以简化输出</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">log</span><span style="color:#A6ACCD;"> </span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 使用--author选项可以打印出某个用户的提交记录</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">log</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--author=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">大江狗</span><span style="color:#89DDFF;">&quot;</span></span></code></pre></div><h2 id="版本回退" tabindex="-1">版本回退 <a class="header-anchor" href="#版本回退" aria-label="Permalink to &quot;版本回退&quot;">​</a></h2><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 可查看所有分支的操作记录（包括已被删除的 commit 记录和 reset 的操作）</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">reflog</span><span style="color:#A6ACCD;"> </span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 将 HEAD 的指向改变，回退到commit前的状态，文件未改变</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">reset</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--soft</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">commit</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">I</span><span style="color:#A6ACCD;">D</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 将 HEAD 的指向改变，文件被修改，均回到之前版本</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">reset</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--hard</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">commit</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">I</span><span style="color:#A6ACCD;">D</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 回退到上个版本</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">reset</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--hard</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">HEAD^</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 回退到前2次提交之前，以此类推，回退到n次提交之前</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">reset</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--hard</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">HEAD~3</span><span style="color:#A6ACCD;"> </span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 按提交id，可以回退，也可以前进</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">reset</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--hard</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">commit</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">I</span><span style="color:#A6ACCD;">D</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 生成一个新的提交来撤销某次提交</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">revert</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">commit</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">I</span><span style="color:#A6ACCD;">D</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><h2 id="远程操作" tabindex="-1">远程操作 <a class="header-anchor" href="#远程操作" aria-label="Permalink to &quot;远程操作&quot;">​</a></h2><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 列出已经存在的远程仓库</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">remote</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 列出远程仓库的详细信息，在别名后面列出URL地址</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">remote</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-v</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 添加远程仓库，别名一般默认origin</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">remote</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">add</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">远程仓库的别</span><span style="color:#A6ACCD;">名</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">远程仓库的URL地</span><span style="color:#A6ACCD;">址</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 修改远程仓库的别名</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">remote</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">rename</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">原远程仓库的别</span><span style="color:#A6ACCD;">名</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">新的别</span><span style="color:#A6ACCD;">名</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 删除指定名称的远程仓库</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">remote</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">remove</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">远程仓库的别</span><span style="color:#A6ACCD;">名</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 修改远程仓库的 URL 地址</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">remote</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">set-url</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">远程仓库的别</span><span style="color:#A6ACCD;">名</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">新的远程仓库URL地</span><span style="color:#A6ACCD;">址</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 将远程仓库所有分支的最新版本全部取回到本地</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">fetch</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">远程仓库的别</span><span style="color:#A6ACCD;">名</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 将远程仓库指定分支的最新版本取回到本地</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">fetch</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">远程主机</span><span style="color:#A6ACCD;">名</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">分支</span><span style="color:#A6ACCD;">名</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 把指定的分支合并到当前所在的分支下</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">merge</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">分支名</span><span style="color:#A6ACCD;">称</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 从远程仓库获取最新版本，并合并，等于fetch + merge</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">pull</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 把本地仓库的分支推送到远程仓库的指定分支</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">push</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">远程仓库的别</span><span style="color:#A6ACCD;">名</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">本地分支</span><span style="color:#A6ACCD;">名</span><span style="color:#89DDFF;">&gt;</span><span style="color:#C3E88D;">:</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">远程分支</span><span style="color:#A6ACCD;">名</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 首次使用u推送后，下次无需设置别名和本地分支可直接git push。</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">push</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-u</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">origin</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">main</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 删除指定的远程仓库的分支</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">push</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">远程仓库的别</span><span style="color:#A6ACCD;">名</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">:</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">远程分支</span><span style="color:#A6ACCD;">名</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">push</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">远程仓库的别</span><span style="color:#A6ACCD;">名</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--delete</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">远程分支</span><span style="color:#A6ACCD;">名</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 删除指定的远程仓库的分支</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">push</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">远程仓库的别</span><span style="color:#A6ACCD;">名</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">:</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">远程分支</span><span style="color:#A6ACCD;">名</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">push</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">远程仓库的别</span><span style="color:#A6ACCD;">名</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--delete</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">远程分支</span><span style="color:#A6ACCD;">名</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 将远程仓库代码复制一份到本地当前目录</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">clone</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">远程仓库的网</span><span style="color:#A6ACCD;">址</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 指定本地仓库的目录</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">clone</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">远程仓库的网</span><span style="color:#A6ACCD;">址</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">本地目</span><span style="color:#A6ACCD;">录</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># -b 指定要克隆的分支，默认是main分支</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">clone</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">远程仓库的网</span><span style="color:#A6ACCD;">址</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-b</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">分支名</span><span style="color:#A6ACCD;">称</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">本地目</span><span style="color:#A6ACCD;">录</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><h2 id="分支操作" tabindex="-1">分支操作 <a class="header-anchor" href="#分支操作" aria-label="Permalink to &quot;分支操作&quot;">​</a></h2><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 列出本地的所有分支，当前所在分支以 &quot;*&quot; 标出</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">branch</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 同时列出本地和远程的所有分支</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">branch</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-a</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 列出本地的所有分支并显示最后一次提交，当前所在分支以 &quot;*&quot; 标出</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">branch</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-v</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 创建新分支，新的分支基于上一次提交建立</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">branch</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">分支</span><span style="color:#A6ACCD;">名</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 修改分支名称</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 如果不指定原分支名称则为当前所在分支</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">branch</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-m</span><span style="color:#A6ACCD;"> [&lt;原分支名称&gt;] </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">新的分支名称</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 强制修改分支名称</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">branch</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-M</span><span style="color:#A6ACCD;"> [&lt;原分支名称&gt;] </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">新的分支名称</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 删除指定的本地分支</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">branch</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-d</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">分支名</span><span style="color:#A6ACCD;">称</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 强制删除指定的本地分支</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">branch</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-D</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">分支名</span><span style="color:#A6ACCD;">称</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 删除远程分支</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">push</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">origin</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--delete</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">分支名</span><span style="color:#A6ACCD;">称</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 切换到已存在的指定分支，如git checkout main</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">checkout</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">分支名</span><span style="color:#A6ACCD;">称</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 与指定分支合并，比如将刚切换的main分支与dev分支合并</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 合并前建议先拉取git pull origin main，然后再合并</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">merge</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">dev</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 把已经提交的记录合并到当前分支</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">cherry-pick</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">commit</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">I</span><span style="color:#A6ACCD;">D</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 创建+切换到指定的分支，保留所有的提交记录</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 等同于 &quot;git branch&quot; 和 &quot;git checkout&quot; 两个命令合并</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">checkout</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-b</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">分支名</span><span style="color:#A6ACCD;">称</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 创建+切换到指定的分支，删除所有的提交记录</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">checkout</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--orphan</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">分支名</span><span style="color:#A6ACCD;">称</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><p>分支命令时一定要注意遵循一定规范，常见的分支名有：</p><ul><li>main: 主分支</li><li>dev: 开发分支</li><li>hotfix : 紧急修复主分支的bug，可以按issue编号命令，如hotfix/#1，方便与main主分支合并</li><li>feature : 按照功能点命名 feature/新增功能，如 feature/add_search。</li></ul><h2 id="标签管理" tabindex="-1">标签管理 <a class="header-anchor" href="#标签管理" aria-label="Permalink to &quot;标签管理&quot;">​</a></h2><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 打印所有的标签</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">tag</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 添加轻量标签，指向提交对象的引用，可以指定之前的提交记录</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">tag</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">标签名</span><span style="color:#A6ACCD;">称</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> [&lt;commit </span><span style="color:#C3E88D;">I</span><span style="color:#A6ACCD;">D</span><span style="color:#89DDFF;">&gt;</span><span style="color:#C3E88D;">]</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 添加带有描述信息的附注标签，可以指定之前的提交记录</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">tag</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-a</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">标签名</span><span style="color:#A6ACCD;">称</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-m</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">标签描述信</span><span style="color:#A6ACCD;">息</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> [&lt;commit </span><span style="color:#C3E88D;">I</span><span style="color:#A6ACCD;">D</span><span style="color:#89DDFF;">&gt;</span><span style="color:#C3E88D;">]</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 切换到指定的标签</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">checkout</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">标签名</span><span style="color:#A6ACCD;">称</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 查看标签的信息</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">show</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">标签名</span><span style="color:#A6ACCD;">称</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 删除指定的标签</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">tag</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-d</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">标签名</span><span style="color:#A6ACCD;">称</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 将指定的标签提交到远程仓库</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">push</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">远程仓库的别</span><span style="color:#A6ACCD;">名</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">标签名</span><span style="color:#A6ACCD;">称</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 将本地所有的标签全部提交到远程仓库</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">push</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">远程仓库的别</span><span style="color:#A6ACCD;">名</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">–tags</span></span></code></pre></div><h2 id="git常见使用场景" tabindex="-1">Git常见使用场景 <a class="header-anchor" href="#git常见使用场景" aria-label="Permalink to &quot;Git常见使用场景&quot;">​</a></h2><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 服务器上首次安装git并通过SSH连接github</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">apt-get</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># ubuntu系统</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">config</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--global</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">user.name</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Your name here</span><span style="color:#89DDFF;">&quot;</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">config</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--global</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">user.email</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">your_email@example.com</span><span style="color:#89DDFF;">&quot;</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">ssh-keygen</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-t</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">rsa</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-C</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">your_email@example.com</span><span style="color:#89DDFF;">&quot;</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 打开隐藏.ssh/id_rsa.pub，复制key</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 打开Github Account Settings &gt; Add SSH Key</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">ssh</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-T</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git@github.com</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 阿里云连接github慢，取消GSSAPIAuthentication no的注释</span></span>\n<span class="line"><span style="color:#FFCB6B;">vim</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/etc/ssh/ssh_config</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 开发分支（dev）上的代码达到上线的标准后，要合并到main分支</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">checkout</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">dev</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">pull</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">checkout</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">main</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">merge</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">dev</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">push</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-u</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">origin</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">main</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 当master代码改动了，需要更新开发分支（dev）上的代码</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">checkout</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">main</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">pull</span><span style="color:#A6ACCD;"> </span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">checkout</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">dev</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">merge</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">main</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">push</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-u</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">origin</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">dev</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 放弃本地修改，使用远程仓库代码强制覆盖本地命令</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">fetch</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--all</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">reset</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--hard</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">origin/main</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">pull</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 多分支实现小的功能改动</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">checkout</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-b</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">feature/add_search</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">dev</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 创建两个分支feature和dev</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">add</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">somefile</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 做出小的修改</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">commit</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-m</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">msg</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 提交修改</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">checkout</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">dev</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 切换到开发分支</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">pull</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 拉取远程代码与本地dev分支合并</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">merge</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">feature/add_search</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 将minor_feature与dev分支合并</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">push</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 提交到远程仓库dev分支</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">checkout</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">main</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 切换到main分支</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">merge</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">dev</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 将dev与main分支合并</span></span>\n<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">push</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 提交到远程仓库main分支</span></span></code></pre></div><h2 id="github免密登陆" tabindex="-1">github免密登陆 <a class="header-anchor" href="#github免密登陆" aria-label="Permalink to &quot;github免密登陆&quot;">​</a></h2><p>要在 GitHub 上实现免密登录，可以按照以下步骤进行操作：</p><ol><li><h5 id="生成-ssh-密钥" tabindex="-1">生成 SSH 密钥： <a class="header-anchor" href="#生成-ssh-密钥" aria-label="Permalink to &quot;生成 SSH 密钥：&quot;">​</a></h5><p>首先，你需要生成一个 SSH 密钥对，用于身份验证。在终端中执行以下命令：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">ssh-keygen -t rsa -b 4096 -C &quot;your_email@example.com&quot;</span></span></code></pre></div><p>将 &quot;<a href="mailto:your_email@example.com" target="_blank" rel="noreferrer">your_email@example.com</a>&quot; 替换为你在 GitHub 上注册的电子邮件地址。根据提示，选择保存密钥的路径和文件名，并为密钥设置一个强密码。</p></li><li><h5 id="将公钥添加到-github" tabindex="-1">将公钥添加到 GitHub： <a class="header-anchor" href="#将公钥添加到-github" aria-label="Permalink to &quot;将公钥添加到 GitHub：&quot;">​</a></h5><p>打开生成的公钥文件（通常是 <code>~/.ssh/id_rsa.pub</code>），将其中的内容复制到剪贴板。</p><ul><li>在浏览器中登录到 GitHub 帐户。</li><li>点击右上角的头像，选择 &quot;Settings&quot;。</li><li>在左侧导航栏中，点击 &quot;SSH and GPG keys&quot;。</li><li>点击 &quot;New SSH key&quot;。</li><li>在 &quot;Title&quot; 字段中，为该密钥提供一个描述性名称。</li><li>在 &quot;Key&quot; 字段中，粘贴刚刚复制的公钥内容。</li><li>点击 &quot;Add SSH key&quot;。</li></ul></li><li><h5 id="验证-ssh-连接" tabindex="-1">验证 SSH 连接： <a class="header-anchor" href="#验证-ssh-连接" aria-label="Permalink to &quot;验证 SSH 连接：&quot;">​</a></h5><p>打开终端，并运行以下命令来验证 SSH 连接是否成功：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">ssh -T git@github.com</span></span></code></pre></div><p>如果一切正常，你应该会看到一条欢迎信息。</p></li><li><h5 id="配置-git-用户名和电子邮件" tabindex="-1">配置 Git 用户名和电子邮件： <a class="header-anchor" href="#配置-git-用户名和电子邮件" aria-label="Permalink to &quot;配置 Git 用户名和电子邮件：&quot;">​</a></h5><p>在终端中执行以下命令，设置全局的 Git 用户名和电子邮件：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">git config --global user.name &quot;Your Name&quot;</span></span>\n<span class="line"><span style="color:#A6ACCD;">git config --global user.email &quot;your_email@example.com&quot;</span></span></code></pre></div><p>将 &quot;Your Name&quot; 替换为你的姓名，将 &quot;<a href="mailto:your_email@example.com" target="_blank" rel="noreferrer">your_email@example.com</a>&quot; 替换为你在 GitHub 上注册的电子邮件地址。</p></li><li><h5 id="克隆仓库或进行其他-git-操作" tabindex="-1">克隆仓库或进行其他 Git 操作： <a class="header-anchor" href="#克隆仓库或进行其他-git-操作" aria-label="Permalink to &quot;克隆仓库或进行其他 Git 操作：&quot;">​</a></h5><p>现在你可以克隆 GitHub 上的仓库或执行其他 Git 操作，而无需每次都输入用户名和密码。</p></li></ol><p>注意事项：</p><ul><li>请确保你的私钥（<code>~/.ssh/id_rsa</code>）得到妥善保管，不要将其泄露给他人。</li><li>如果你使用多个 GitHub 帐户或有其他密钥管理需求，可以参考 Git 的密钥管理文档进行配置。</li></ul><p>以上步骤应该能帮助你在 GitHub 上实现免密登录。这样你就可以更方便地进行 Git 操作而无需频繁输入密码。</p><h2 id="github上传大文件" tabindex="-1">GitHub上传大文件 <a class="header-anchor" href="#github上传大文件" aria-label="Permalink to &quot;GitHub上传大文件&quot;">​</a></h2><p>GitHub允许上传大文件，但是默认情况下，我们只能上传小于100MB的文件。如果要上传大于100MB的文件，则必须使用Git LFS（Large File Storage）系统。Git LFS系统允许我们将大文件存储在独立的数据服务器上，并通过GitHub指针链接下载。</p><p>以下是GitHub上传大文件的详细步骤：</p><ol><li><h5 id="安装-git-lfs-large-file-storage" tabindex="-1">安装 Git LFS（Large File Storage）： <a class="header-anchor" href="#安装-git-lfs-large-file-storage" aria-label="Permalink to &quot;安装 Git LFS（Large File Storage）：&quot;">​</a></h5><p>首先，你需要安装 Git LFS 扩展，用于管理和上传大文件。你可以前往 <a href="https://git-lfs.github.com/" target="_blank" rel="noreferrer">Git LFS 的官方网站</a>下载并安装适合你操作系统的版本。</p></li><li><h5 id="初始化-git-lfs" tabindex="-1">初始化 Git LFS： <a class="header-anchor" href="#初始化-git-lfs" aria-label="Permalink to &quot;初始化 Git LFS：&quot;">​</a></h5><p>打开终端，并进入你要上传的 Git 仓库的本地目录。运行以下命令以初始化 Git LFS：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">git lfs install</span></span></code></pre></div></li><li><h5 id="将大文件添加到-git-lfs-追踪列表" tabindex="-1">将大文件添加到 Git LFS 追踪列表： <a class="header-anchor" href="#将大文件添加到-git-lfs-追踪列表" aria-label="Permalink to &quot;将大文件添加到 Git LFS 追踪列表：&quot;">​</a></h5><p>使用以下命令将你要上传的大文件添加到 Git LFS 追踪列表：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">git lfs track &quot;path/to/large/file&quot;</span></span></code></pre></div><p>将 &quot;path/to/large/file&quot; 替换为你要上传的大文件的路径。你可以追踪多个文件，每个文件一行。</p></li><li><h5 id="将大文件添加到-git-仓库" tabindex="-1">将大文件添加到 Git 仓库： <a class="header-anchor" href="#将大文件添加到-git-仓库" aria-label="Permalink to &quot;将大文件添加到 Git 仓库：&quot;">​</a></h5><p>使用以下命令将大文件添加到 Git 仓库：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">git add path/to/large/file</span></span></code></pre></div><p>将 &quot;path/to/large/file&quot; 替换为你要添加的大文件的路径。</p></li><li><h5 id="提交并推送变更" tabindex="-1">提交并推送变更： <a class="header-anchor" href="#提交并推送变更" aria-label="Permalink to &quot;提交并推送变更：&quot;">​</a></h5><p>运行以下命令以提交并推送你的变更到 GitHub 仓库：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">git commit -m &quot;Add large file&quot;</span></span>\n<span class="line"><span style="color:#A6ACCD;">git push origin master</span></span></code></pre></div><p>确保将 &quot;master&quot; 替换为你要推送到的分支名称。</p></li><li><h5 id="检查大文件是否已上传" tabindex="-1">检查大文件是否已上传： <a class="header-anchor" href="#检查大文件是否已上传" aria-label="Permalink to &quot;检查大文件是否已上传：&quot;">​</a></h5><p>打开你的 GitHub 仓库页面，导航到相应的文件路径，并确认大文件已成功上传。</p></li></ol><p>注意事项：</p><ul><li>Git LFS 可以帮助你有效地管理大文件，但它仍然会占用存储空间。确保你的 Git 仓库和存储库有足够的空间来存储这些大文件。</li><li>GitHub 免费版对 Git LFS 有一定的限制。如果你需要上传大量大文件或者超过 GitHub 免费版的限制，请考虑升级到付费版或寻找其他适合存储大文件的解决方案。</li></ul><h2 id="github-action-和-cicd" tabindex="-1">Github Action 和 CICD <a class="header-anchor" href="#github-action-和-cicd" aria-label="Permalink to &quot;Github Action 和 CICD&quot;">​</a></h2><ol><li><h3 id="cicd" tabindex="-1">CICD <a class="header-anchor" href="#cicd" aria-label="Permalink to &quot;CICD&quot;">​</a></h3><p>CI/CD（持续集成/持续交付）是一种软件开发实践，它通过自动化流程来持续集成代码、构建、测试和交付软件，以便快速且可靠地发布高质量的应用程序。下面是一个详细的示例，展示了一个基本的 CI/CD 流程：</p><ol><li><p><strong>代码托管</strong>：将代码存储在版本控制系统（如 Git）中，并使用分支来管理不同的开发任务和版本。</p></li><li><p><strong>持续集成</strong>：当有新的代码提交或分支合并到主分支时，触发 CI 流程。</p><ul><li><p>自动化构建：使用构建工具（如 Maven、Gradle 或 npm）自动编译和构建应用程序。</p></li><li><p>代码质量检查：运行静态代码分析工具（如 SonarQube）来检查代码质量和潜在问题。</p></li><li><p>单元测试：运行单元测试套件，确保代码的功能正确性。</p></li></ul></li><li><p><strong>持续交付</strong>：在通过了持续集成阶段后，将构建的应用程序部署到开发环境中进行进一步的测试和验证。</p><ul><li><p>部署到开发环境：自动将构建的应用程序部署到开发服务器或容器中。</p></li><li><p>集成测试：运行集成测试，验证不同组件和服务之间的交互是否正常。</p></li></ul></li><li><p><strong>自动化测试</strong>：使用自动化测试工具（如 Selenium、JUnit、Cypress）执行端到端测试、功能测试、性能测试等，以确保应用程序在不同环境下的稳定性和可靠性。</p></li><li><p><strong>部署到生产环境</strong>：在通过了测试阶段后，将应用程序部署到生产环境中。</p><ul><li><p>部署到生产环境：自动将应用程序部署到生产服务器或云平台中。</p></li><li><p>监控和日志：配置监控工具（如 Prometheus）来收集应用程序的运行时数据和日志，以便实时监测和分析。</p></li></ul></li><li><p><strong>持续交付和回滚</strong>：通过自动化流程和版本控制，实现持续交付和快速回滚。</p><ul><li><p>持续交付：根据需要，将更新的版本交付给用户。</p></li><li><p>快速回滚：如果出现问题或错误，可以快速回滚到之前的可靠版本。</p></li></ul></li></ol><p>通过实施 CI/CD，可以提高软件交付的速度和质量，并增强团队的协作效率。使用适当的工具和技术，可以根据项目的需求和团队的能力进行自定义和扩展。流程中的每个阶段都可以使用不同的工具和自动化脚本来实现</p></li><li><h3 id="github-action" tabindex="-1">Github Action <a class="header-anchor" href="#github-action" aria-label="Permalink to &quot;Github Action&quot;">​</a></h3><p>当你在 GitHub 仓库中使用 GitHub Actions 时，你可以通过以下示例来详细了解如何配置和使用它：</p><ol><li><h5 id="在你的-github-仓库中-点击页面上方的-actions-选项卡。" tabindex="-1">在你的 GitHub 仓库中，点击页面上方的 &quot;Actions&quot; 选项卡。 <a class="header-anchor" href="#在你的-github-仓库中-点击页面上方的-actions-选项卡。" aria-label="Permalink to &quot;在你的 GitHub 仓库中，点击页面上方的 &quot;Actions&quot; 选项卡。&quot;">​</a></h5></li><li><h5 id="如果你是第一次使用-github-actions-你可能会看到一些模板供选择。如果你已经有一些工作流程-可以选择-set-up-a-workflow-yourself-。" tabindex="-1">如果你是第一次使用 GitHub Actions，你可能会看到一些模板供选择。如果你已经有一些工作流程，可以选择 &quot;Set up a workflow yourself&quot;。 <a class="header-anchor" href="#如果你是第一次使用-github-actions-你可能会看到一些模板供选择。如果你已经有一些工作流程-可以选择-set-up-a-workflow-yourself-。" aria-label="Permalink to &quot;如果你是第一次使用 GitHub Actions，你可能会看到一些模板供选择。如果你已经有一些工作流程，可以选择 &quot;Set up a workflow yourself&quot;。&quot;">​</a></h5></li><li><h5 id="在打开的编辑器中-你可以开始编写工作流程的配置文件-yaml-格式-。以下是一个简单的示例" tabindex="-1">在打开的编辑器中，你可以开始编写工作流程的配置文件（YAML 格式）。以下是一个简单的示例： <a class="header-anchor" href="#在打开的编辑器中-你可以开始编写工作流程的配置文件-yaml-格式-。以下是一个简单的示例" aria-label="Permalink to &quot;在打开的编辑器中，你可以开始编写工作流程的配置文件（YAML 格式）。以下是一个简单的示例：&quot;">​</a></h5></li></ol><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">CI Pipeline</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#FF9CAC;">on</span><span style="color:#89DDFF;">:</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">push</span><span style="color:#89DDFF;">:</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">branches</span><span style="color:#89DDFF;">:</span></span>\n<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">main</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">pull_request</span><span style="color:#89DDFF;">:</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">branches</span><span style="color:#89DDFF;">:</span></span>\n<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">main</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#F07178;">jobs</span><span style="color:#89DDFF;">:</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">build</span><span style="color:#89DDFF;">:</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">runs-on</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">ubuntu-latest</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">steps</span><span style="color:#89DDFF;">:</span></span>\n<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Checkout code</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">uses</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">actions/checkout@v2</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Set up Node.js</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">uses</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">actions/setup-node@v2</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">with</span><span style="color:#89DDFF;">:</span></span>\n<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#F07178;">node-version</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">14</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Install dependencies</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">run</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">npm ci</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Run tests</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">run</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">npm test</span></span></code></pre></div><p>以上配置定义了一个名为 &quot;CI Pipeline&quot; 的工作流程。该工作流程将在每次推送到 <code>main</code> 分支或针对 <code>main</code> 分支的拉取请求时触发。</p><ol start="4"><li><h5 id="点击编辑器上方的-start-commit-按钮-输入提交消息并提交工作流程配置文件。" tabindex="-1">点击编辑器上方的 &quot;Start commit&quot; 按钮，输入提交消息并提交工作流程配置文件。 <a class="header-anchor" href="#点击编辑器上方的-start-commit-按钮-输入提交消息并提交工作流程配置文件。" aria-label="Permalink to &quot;点击编辑器上方的 &quot;Start commit&quot; 按钮，输入提交消息并提交工作流程配置文件。&quot;">​</a></h5></li><li><h5 id="github-将自动运行你的工作流程。你可以在-actions-选项卡的页面上查看工作流程的执行状态和输出结果。" tabindex="-1">GitHub 将自动运行你的工作流程。你可以在 &quot;Actions&quot; 选项卡的页面上查看工作流程的执行状态和输出结果。 <a class="header-anchor" href="#github-将自动运行你的工作流程。你可以在-actions-选项卡的页面上查看工作流程的执行状态和输出结果。" aria-label="Permalink to &quot;GitHub 将自动运行你的工作流程。你可以在 &quot;Actions&quot; 选项卡的页面上查看工作流程的执行状态和输出结果。&quot;">​</a></h5></li></ol><p>上述示例展示了一个基本的 CI（持续集成）工作流程。当你推送代码到 <code>main</code> 分支或针对 <code>main</code> 分支的拉取请求时，GitHub Actions 将执行以下步骤：</p><ul><li>检出代码到工作环境。</li><li>设置 Node.js 环境。</li><li>安装项目的依赖项。</li><li>运行测试。</li></ul><p>你可以根据项目需求和 CI/CD 流程进行自定义配置。例如，你可以添加其他步骤来进行代码检查、构建 Docker 镜像、发布到云平台等等。</p><p>除了基本的 CI 工作流程外，GitHub Actions 还支持更复杂的工作流程，例如自动化部署、定时任务、与第三方服务的集成等。你可以在 GitHub Actions 官方文档中了解更多配置选项和示例。</p><p>请注意：</p><ul><li>确保你的项目具有适当的测试和构建脚本，以便在 GitHub Actions 中运行。</li><li>在工作流程中使用的依赖项和脚本应与项目的实际需求相符。</li><li>配置敏感信息时，请使用 GitHub 仓库的 Secrets 功能来安全地存储和引用这些值。</li></ul><p>以上是一个简单的 GitHub Actions 的示例，你可以根据你的项目需求进行适当的调整和扩展。GitHub Actions 提供了强大的自动</p><p>化功能，可以帮助你提高开发效率和代码质量。</p></li></ol>',108)];const e=s(o,[["render",function(s,l,p,o,e,c){return a(),n("div",null,t)}]]);export{p as __pageData,e as default};
