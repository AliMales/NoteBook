import{_ as e,j as a,k as o,S as s}from"./chunks/framework.2ff57350.js";const n=JSON.parse('{"title":"HTML","description":"","frontmatter":{},"headers":[],"relativePath":"note/html.md","filePath":"note/html.md"}'),t={name:"note/html.md"},c=[s('<h1 id="html" tabindex="-1">HTML <a class="header-anchor" href="#html" aria-label="Permalink to &quot;HTML&quot;">​</a></h1><p>📒 HTML(HyperTextMark-upLanguage)即超文本标记语言，是WWW的描述语言。 知道xml文件，对于html文件也不陌生。 前者作为配置语言已经有一定的地位，后者则是一种标记语言！结构和书写方式都很类似，但本质却完全不同。</p><p>html大多数时候因为太简单而被忽略学习，其实简单的东西学问很大，就像Iphone设计原理一样，简单却强大，每一个细节都经得起琢磨。</p><p>这里有一个例子：</p><p><img src="https://c18e-1257416358.cos.accelerate.myqcloud.com/uPic/image-20191202152912145.png" alt="image-20191202152912145"></p><p>这样布局div中的文字并不能如愿的渲染成红色，调试结果发现编译出来的布局有点奇怪</p><p><img src="https://c18e-1257416358.cos.accelerate.myqcloud.com/uPic/image-20191202153405887.png" alt="image-20191202153405887"></p><p>原因是块元素可以包含内联元素或某些块元素，但内联元素却不能包含块元素</p><p>在HTML5中标签分为七大类：</p><ol><li>Metadata（元数据内容）</li><li>Flow（流式元素）</li><li>Sectioning（章节元素）</li><li>Heading（标题元素）</li><li>Phrasing（段落元素）</li><li>Embedded（嵌入元素）</li><li>Interactive（交互元素）</li></ol><p>关系如下图</p><p><img src="https://c18e-1257416358.cos.accelerate.myqcloud.com/uPic/image-20191202154109922.png" alt="image-20191202154109922"></p><h4 id="metadata-元数据元素" tabindex="-1">Metadata（元数据元素） <a class="header-anchor" href="#metadata-元数据元素" aria-label="Permalink to &quot;Metadata（元数据元素）&quot;">​</a></h4><p>顾名思义，<strong>Metadata元素意指那些定义文档元数据信息的元素</strong> — 其作用包括：影响文档中其它节点的展现与行为、定义文档与其它外部资源之间的关系等。以下元素属于Metadata：<code>base</code>, <code>link</code>, <code>meta</code>, <code>noscript</code>, <code>script</code>, <code>style</code>, <code>template</code>, <code>title</code>。</p><h4 id="flow-流式元素" tabindex="-1">Flow（流式元素） <a class="header-anchor" href="#flow-流式元素" aria-label="Permalink to &quot;Flow（流式元素）&quot;">​</a></h4><p><strong>所有可以放在body标签内</strong>，构成文档内容的元素均属于Flow元素。因此，除了<code>base</code>, <code>link</code>, <code>meta</code>, <code>style</code>, <code>title</code>等只能放在<code>head</code>标签内的元素外，剩下的所有元素均属于Flow元素。具体包含：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">a， abbr， address， area（如果它是map元素的后裔）， article， aside， audio， b，</span></span>\n<span class="line"><span style="color:#A6ACCD;">bdi， bdo， blockquote， br， button， canvas， cite， code， command， datalist， </span></span>\n<span class="line"><span style="color:#A6ACCD;">del， details， dfn， div， dl，em， embed， fieldset， figure， footer， form，</span></span>\n<span class="line"><span style="color:#A6ACCD;">h1， h2， h3， h4， h5， h6， header， hgroup， hr， i， iframe， img， input， </span></span>\n<span class="line"><span style="color:#A6ACCD;">ins， kbd， keygen， label， map， mark， math， menu， meter，nav， noscript， </span></span>\n<span class="line"><span style="color:#A6ACCD;">object， ol， output， p， pre， progress， q， ruby， s， samp， script， section，</span></span>\n<span class="line"><span style="color:#A6ACCD;">select， small， span， strong， style（如果该元素设置了scoped属性）， sub， sup，</span></span>\n<span class="line"><span style="color:#A6ACCD;">svg， table，textarea， time， u， ul， var， video， wbr， text</span></span></code></pre></div><h4 id="sectioning-章节元素" tabindex="-1">Sectioning（章节元素） <a class="header-anchor" href="#sectioning-章节元素" aria-label="Permalink to &quot;Sectioning（章节元素）&quot;">​</a></h4><p>Sectioning意指定义页面结构的元素，具体包含以下四个：<code>article</code>, <code>aside</code>, <code>nav</code>, <code>section</code>。</p><h4 id="heading-标题元素" tabindex="-1">Heading（标题元素） <a class="header-anchor" href="#heading-标题元素" aria-label="Permalink to &quot;Heading（标题元素）&quot;">​</a></h4><p>所有标题元素属于Heading，也即以下6个元素：<code>h1</code>, <code>h2</code>, <code>h3</code>, <code>h4</code>, <code>h5</code>, <code>h6</code>。</p><h4 id="phrasing-段落元素" tabindex="-1">Phrasing（段落元素） <a class="header-anchor" href="#phrasing-段落元素" aria-label="Permalink to &quot;Phrasing（段落元素）&quot;">​</a></h4><p><strong>所有可以放在p标签内，构成段落内容的元素均属于Phrasing元素</strong>。因此，所有Phrasing元素均属于Flow元素。在HTML5标准文档中，关于Phrasing元素的原始定义为：</p><blockquote><p>Phrasing content is the text of the document, as well as elements that mark up that text at the intra-paragraph level. Runs of phrasing content form paragraphs.</p></blockquote><p>对于这一定义，个人认为不应当使用“text”这一容易引起误解的词，事实上，一个元素即使不是文本，只要能包含在p标签中成为段落内容的一部分，就可以称之为Phrasing元素。比如：<code>audio</code>、<code>video</code>、<code>img</code>、<code>select</code>、<code>input</code>等元素(经测试，这些元素都可以放置在p标签中)。 具体包含如下：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">a（如果其只包含段落式元素）， abbr， area（如果它是map元素的后裔）， audio， b，</span></span>\n<span class="line"><span style="color:#A6ACCD;">bdi， bdo， br， button， canvas， cite， code， command， datalist， </span></span>\n<span class="line"><span style="color:#A6ACCD;">del（如果其只包含段落式元素）， dfn， em， embed， i，iframe， img， input， </span></span>\n<span class="line"><span style="color:#A6ACCD;">ins（如果其只包含段落式元素）， kbd， keygen， label， map（如果其只包含段落式元素），</span></span>\n<span class="line"><span style="color:#A6ACCD;">mark， math， meter， noscript， object， output， progress， q， ruby， s，</span></span>\n<span class="line"><span style="color:#A6ACCD;">samp， script，select， small， span， strong， sub， sup， svg， textarea，</span></span>\n<span class="line"><span style="color:#A6ACCD;">time， u， var， video， wbr， text</span></span></code></pre></div><p>Phrasing元素内部一般只能包含别的Phrasing元素。 关于Phrasing元素，<a href="https://stackoverflow.com/questions/30233447/what-is-the-difference-between-phrasing-content-and-flow-content" target="_blank" rel="noreferrer">Stackoverflow上有一个比较精彩的问答</a>，可供参考。</p><h4 id="embedded-嵌入元素" tabindex="-1">Embedded（嵌入元素） <a class="header-anchor" href="#embedded-嵌入元素" aria-label="Permalink to &quot;Embedded（嵌入元素）&quot;">​</a></h4><p>所有用于在网页中<strong>嵌入外部资源的元素</strong>均属于Embedded元素，具体包含以下9个：<code>audio</code>, <code>video</code>, <code>img</code>, <code>canvas</code>, <code>svg</code>, <code>iframe</code>, <code>embed</code>, <code>object</code>, <code>math</code>。</p><h4 id="interactive-交互元素" tabindex="-1">Interactive（交互元素） <a class="header-anchor" href="#interactive-交互元素" aria-label="Permalink to &quot;Interactive（交互元素）&quot;">​</a></h4><p>所有与用户交互有关的元素均属于Interactive元素，包括<code>a</code>, <code>input</code>, <code>textarea</code>, <code>select</code>等。 具体包含如下：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">a， audio（如果设置了controls属性）， button， details， embed， iframe，</span></span>\n<span class="line"><span style="color:#A6ACCD;">img（如果设置了usemap属性）， input（如果type属性不为hidden状态）， keygen， label，</span></span>\n<span class="line"><span style="color:#A6ACCD;">menu（如果type属性为toolbar状态），object（如果设置了usemap属性）， select， </span></span>\n<span class="line"><span style="color:#A6ACCD;">textarea， video（如果设置了controls属性）</span></span></code></pre></div><h3 id="html5内容模型-content-model" tabindex="-1">HTML5内容模型(Content Model) <a class="header-anchor" href="#html5内容模型-content-model" aria-label="Permalink to &quot;HTML5内容模型(Content Model)&quot;">​</a></h3><p>根据以上元素分类，HTML5标准文档定义了任何元素的内容模型 — 对于该元素而言，何种子元素才是合法的。 比如，对于p元素而言，其内容模型为Phrasing, 这意味着<code>p</code>元素只接受Phrasing元素为子元素，而对于像<code>div</code>这样的非Phrasing元素则并不接受。类似的，<code>li</code>元素的内容模型为Flow，因此任何可以放置在<code>body</code>中的元素都可以作为<code>li</code>元素的子元素。</p><h4 id="透明内容模型-transparent-content-models" tabindex="-1">透明内容模型(Transparent content models) <a class="header-anchor" href="#透明内容模型-transparent-content-models" aria-label="Permalink to &quot;透明内容模型(Transparent content models)&quot;">​</a></h4><p>值得注意的是，HTML5标准文档在定义元素的内容模型时，会使用一类特殊的分类：<strong>透明内容模型(transparent) — 对于内容模型为透明(transparent)的元素而言，其子元素的合法性由其父元素所决定；如果其父元素的内容模型仍为透明，则查看其祖父元素的情况，并依此类推；如果向上推演至body标签仍未找到任何内容模型非透明的父级元素，则该透明元素内部可包含任何Flow元素。</strong> 透明元素目前W3C中也没有给出明确的包含哪些元素，从段落元素中推断透明内容模型元素有：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">a, ins, del, map</span></span></code></pre></div><p><strong>典型的具有透明内容模型的元素为<code>a</code>元素</strong>。因此，当<code>a</code>出现在<code>p</code>标签中时，<code>a</code>不能接受<code>div</code>作为子元素；而当<code>a</code>出现在<code>div</code>标签中时，<code>a</code>可以接受<code>div</code>作为子元素。对此，<a href="http://www.zhihu.com/question/34952563" target="_blank" rel="noreferrer">知乎上有一个问答解释了这种现象</a>。</p>',38)];const l=e(t,[["render",function(e,s,n,t,l,d){return a(),o("div",null,c)}]]);export{n as __pageData,l as default};
