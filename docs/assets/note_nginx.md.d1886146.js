import{_ as s,o as n,c as a,a as l}from"./app.a5d386c5.js";const p=JSON.parse('{"title":"Nginx","description":"","frontmatter":{},"headers":[{"level":2,"title":"简介","slug":"简介","link":"#简介","children":[]},{"level":2,"title":"Nginx的安装","slug":"nginx的安装","link":"#nginx的安装","children":[]},{"level":2,"title":"Nginx配置文件构成","slug":"nginx配置文件构成","link":"#nginx配置文件构成","children":[]},{"level":2,"title":"Nginx配置文件示例","slug":"nginx配置文件示例","link":"#nginx配置文件示例","children":[]},{"level":2,"title":"Nginx Location配置","slug":"nginx-location配置","link":"#nginx-location配置","children":[]},{"level":2,"title":"URL匹配方式及优先级","slug":"url匹配方式及优先级","link":"#url匹配方式及优先级","children":[]},{"level":2,"title":"请求转发和重定向","slug":"请求转发和重定向","link":"#请求转发和重定向","children":[]},{"level":2,"title":"Nginx静态文件配置","slug":"nginx静态文件配置","link":"#nginx静态文件配置","children":[]},{"level":2,"title":"静态文件缓存","slug":"静态文件缓存","link":"#静态文件缓存","children":[]},{"level":2,"title":"静态文件压缩","slug":"静态文件压缩","link":"#静态文件压缩","children":[]},{"level":2,"title":"文件下载服务器","slug":"文件下载服务器","link":"#文件下载服务器","children":[]},{"level":2,"title":"Nginx配置HTTPS","slug":"nginx配置https","link":"#nginx配置https","children":[]},{"level":2,"title":"Nginx日志配置","slug":"nginx日志配置","link":"#nginx日志配置","children":[]},{"level":2,"title":"Nginx超时设置","slug":"nginx超时设置","link":"#nginx超时设置","children":[]},{"level":2,"title":"请求超时设置","slug":"请求超时设置","link":"#请求超时设置","children":[]},{"level":2,"title":"Proxy反向代理超时设置","slug":"proxy反向代理超时设置","link":"#proxy反向代理超时设置","children":[]},{"level":2,"title":"Nginx负载均衡","slug":"nginx负载均衡","link":"#nginx负载均衡","children":[]},{"level":2,"title":"轮询(默认)","slug":"轮询-默认","link":"#轮询-默认","children":[]},{"level":2,"title":"权重(weight)","slug":"权重-weight","link":"#权重-weight","children":[]},{"level":2,"title":"ip_hash","slug":"ip-hash","link":"#ip-hash","children":[]},{"level":2,"title":"url_hash","slug":"url-hash","link":"#url-hash","children":[]},{"level":2,"title":"fair(第三方)","slug":"fair-第三方","link":"#fair-第三方","children":[]},{"level":2,"title":"Nginx与uWSGI服务器的沟通","slug":"nginx与uwsgi服务器的沟通","link":"#nginx与uwsgi服务器的沟通","children":[{"level":3,"title":"Python Web应用部署负载均衡Nginx配置文件参考","slug":"python-web应用部署负载均衡nginx配置文件参考","link":"#python-web应用部署负载均衡nginx配置文件参考","children":[]}]},{"level":2,"title":"示例","slug":"示例","link":"#示例","children":[]},{"level":2,"title":"默认 nginx 目录路径。","slug":"默认-nginx-目录路径。","link":"#默认-nginx-目录路径。","children":[]},{"level":2,"title":"我的nginx配置","slug":"我的nginx配置","link":"#我的nginx配置","children":[]}],"relativePath":"note/nginx.md"}'),o={name:"note/nginx.md"},e=[l('<h1 id="nginx" tabindex="-1">Nginx <a class="header-anchor" href="#nginx" aria-hidden="true">#</a></h1><h2 id="简介" tabindex="-1"><strong>简介</strong> <a class="header-anchor" href="#简介" aria-hidden="true">#</a></h2><p>轻量、开源、HTTP服务器软件！可以和apache配合使用。</p><p>nginx基于事件和异步操作，访问量很大的时候可以轻松处理；</p><p>apache依赖于线程，访问量大会大量新增线程，很快耗尽内存。</p><h2 id="nginx的安装" tabindex="-1">Nginx的安装 <a class="header-anchor" href="#nginx的安装" aria-hidden="true">#</a></h2><p>Nginx的安装很简单，网上教程很多，这里仅以Ubuntu系统(Linux)演示：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 安装nginx</span></span>\n<span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">apt-get</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">nginx</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 启动nginx服务</span></span>\n<span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">systemctl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">nginx</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">start</span></span>\n<span class="line"></span></code></pre></div><p>Nginx启动时通常会使用默认设置, 使用如下命令可以让自己的配置文件生效。</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 删除/etc/nginx/sites-available/目录下默认自定义配置</span></span>\n<span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">rm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-rf</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/etc/nginx/sites-available/default</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># sites-available目录下新建自定义配置文件,可以1个网站1个</span></span>\n<span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">nano</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/etc/nginx/sites-available/myapp1</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 与sites-enabled目录建立软链，可让自定义配置文件生效</span></span>\n<span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">ln</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-s</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/etc/nginx/sites-available/myapp1</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/etc/nginx/sites-enabled</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 检查nginx配置文件是否有问题</span></span>\n<span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">systemctl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">nginx</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">–t</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 重启nginx服务</span></span>\n<span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">systemctl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">nginx</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">restart</span></span>\n<span class="line"></span></code></pre></div><p><strong>注意</strong>：如果你不是使用<code>sudo apt-get</code>命令安装的nginx，而是直接使用<code>yum</code>命令或docker镜像安装的，nginx的默认自定义配置文件位于<code>/etc/nginx/conf.d/default.conf</code>。如果你希望让自定义配置文件生效，你需要先删除这个默认配置文件，然后在``/etc/nginx/conf.d/<code>目录下新建一个</code>nginx.conf`。</p><p>如果你使用docker安装nginx，Dockerfile里可以设置将宿主机的当前目录下的<code>nginx.conf</code>复制一份到的容器内的<code>/etc/nginx/conf.d/</code>的目录下，如下所示：</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># nginx镜像Dockerfile</span></span>\n<span class="line"><span style="color:#FFCB6B;">FROM</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">nginx:latest</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 删除原有配置文件，创建静态资源文件夹和ssl证书保存文件夹</span></span>\n<span class="line"><span style="color:#FFCB6B;">RUN</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">rm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/etc/nginx/conf.d/default.conf</span><span style="color:#A6ACCD;"> </span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 将自定义配置文件nginx.conf复制到容器内/etc/nginx/conf.d/目录</span></span>\n<span class="line"><span style="color:#FFCB6B;">ADD</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">./nginx.conf</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/etc/nginx/conf.d/</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 关闭守护模式</span></span>\n<span class="line"><span style="color:#FFCB6B;">CMD</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">nginx</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">-g</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">daemon off;</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">]</span></span>\n<span class="line"></span></code></pre></div><h2 id="nginx配置文件构成" tabindex="-1">Nginx配置文件构成 <a class="header-anchor" href="#nginx配置文件构成" aria-hidden="true">#</a></h2><p>一个Nginx配置文件通常包含3个模块：</p><ul><li>全局块：比如工作进程数，定义日志路径；</li><li>Events块：设置处理轮询事件模型，每个工作进程最大连接数及http层的keep-alive超时时间；</li><li>http块：路由匹配、静态文件服务器、反向代理、负载均衡等。</li></ul><p>其中http块又可以进一步分成3块，http全局块里的配置对所有站点生效，server块配置仅对单个站点生效，而location块的配置仅对单个页面或url生效。</p><h2 id="nginx配置文件示例" tabindex="-1">Nginx配置文件示例 <a class="header-anchor" href="#nginx配置文件示例" aria-hidden="true">#</a></h2><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 全局块</span></span>\n<span class="line"><span style="color:#89DDFF;">user </span><span style="color:#A6ACCD;">www-data</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#89DDFF;">worker_processes </span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">## 默认1，一般建议设成CPU核数1-2倍</span></span>\n<span class="line"><span style="color:#89DDFF;">error_log </span><span style="color:#A6ACCD;"> logs/error.log</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">## 错误日志路径</span></span>\n<span class="line"><span style="color:#89DDFF;">pid </span><span style="color:#A6ACCD;"> logs/nginx.pid</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">## 进程id</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># Events块</span></span>\n<span class="line"><span style="color:#C792EA;">events</span><span style="color:#A6ACCD;"> {</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;"># 使用epoll的I/O 模型处理轮询事件。</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;"># 可以不设置，nginx会根据操作系统选择合适的模型</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;"> use </span><span style="color:#A6ACCD;">epoll</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;"># 工作进程的最大连接数量, 默认1024个</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;"> worker_connections </span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2048</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;"># http层面的keep-alive超时时间</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;"> keepalive_timeout </span><span style="color:#A6ACCD;">60</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;"># 客户端请求头部的缓冲区大小</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;"> client_header_buffer_size </span><span style="color:#A6ACCD;">2k</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C792EA;">http</span><span style="color:#A6ACCD;"> { </span><span style="color:#676E95;font-style:italic;"># http全局块</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;"> include </span><span style="color:#A6ACCD;">mime.types</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;"># 导入文件扩展名与文件类型映射表</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;"> default_type </span><span style="color:#A6ACCD;">application/octet-stream</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;"># 默认文件类型</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;"># 日志格式及access日志路径</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;"> log_format </span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;"> main</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">&#39;</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">remote_addr</span><span style="color:#C3E88D;"> - </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">remote_user</span><span style="color:#C3E88D;"> [</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">time_local</span><span style="color:#C3E88D;">]  </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">status</span><span style="color:#C3E88D;"> &#39;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C3E88D;">&#39;&quot;</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">request</span><span style="color:#C3E88D;">&quot; </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">body_bytes_sent</span><span style="color:#C3E88D;"> &quot;</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">http_referer</span><span style="color:#C3E88D;">&quot; &#39;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C3E88D;">&#39;&quot;</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">http_user_agent</span><span style="color:#C3E88D;">&quot; &quot;</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">http_x_forwarded_for</span><span style="color:#C3E88D;">&quot;&#39;</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;"> access_log </span><span style="color:#A6ACCD;">  logs/access.log </span><span style="color:#89DDFF;"> main;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;"># 允许sendfile方式传输文件，默认为off。</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;"> sendfile </span><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> on;</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;"> tcp_nopush </span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;"> on;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># sendfile开启时才开启。</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;"># http server块</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;"># 简单反向代理</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">server</span><span style="color:#A6ACCD;"> {</span></span>\n<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> listen </span><span style="color:#A6ACCD;">      </span><span style="color:#F78C6C;">80</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> server_name </span><span style="color:#A6ACCD;"> domain2.com www.domain2.com</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> access_log </span><span style="color:#A6ACCD;">  logs/domain2.access.log </span><span style="color:#89DDFF;"> main;</span></span>\n<span class="line"><span style="color:#A6ACCD;">   </span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># 转发动态请求到web应用服务器</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">/ </span><span style="color:#A6ACCD;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#89DDFF;"> proxy_pass </span><span style="color:#A6ACCD;">     http://127.0.0.1:8000</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#89DDFF;"> deny </span><span style="color:#A6ACCD;">192.24.40.8</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;"># 拒绝的ip</span></span>\n<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#89DDFF;"> allow </span><span style="color:#A6ACCD;">192.24.40.6</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 允许的ip   </span></span>\n<span class="line"><span style="color:#A6ACCD;">    }</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># 错误页面</span></span>\n<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> error_page </span><span style="color:#A6ACCD;">  </span><span style="color:#F78C6C;">500</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">502</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">503</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">504</span><span style="color:#A6ACCD;">  /50x.html</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/50x.html </span><span style="color:#A6ACCD;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">           </span><span style="color:#89DDFF;"> root </span><span style="color:#A6ACCD;">  html</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">        }</span></span>\n<span class="line"><span style="color:#A6ACCD;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;"># 负载均衡</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">upstream</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">backend_server </span><span style="color:#A6ACCD;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">server</span><span style="color:#A6ACCD;"> 192.168.0.1:8000 </span><span style="color:#A6ACCD;font-style:italic;">weight</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;">; </span><span style="color:#676E95;font-style:italic;"># weight越高，权重越大</span></span>\n<span class="line"><span style="color:#A6ACCD;">    server 192.168.0.2:8000 </span><span style="color:#A6ACCD;font-style:italic;">weight</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    server 192.168.0.3:8000;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">server</span><span style="color:#A6ACCD;"> 192.168.0.4:8001 backup; </span><span style="color:#676E95;font-style:italic;"># 热备</span></span>\n<span class="line"><span style="color:#A6ACCD;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">server</span><span style="color:#A6ACCD;"> {</span></span>\n<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> listen </span><span style="color:#A6ACCD;">         </span><span style="color:#F78C6C;">80</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> server_name </span><span style="color:#A6ACCD;">    big.server.com</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> access_log </span><span style="color:#A6ACCD;">     logs/big.server.access.log</span><span style="color:#89DDFF;"> main;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span></span>\n<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> charset </span><span style="color:#A6ACCD;">utf-8</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> client_max_body_size </span><span style="color:#A6ACCD;">10M</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 限制用户上传文件大小，默认1M</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">/ </span><span style="color:#A6ACCD;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#676E95;font-style:italic;"># 使用proxy_pass转发请求到通过upstream定义的一组应用服务器</span></span>\n<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#89DDFF;"> proxy_pass </span><span style="color:#A6ACCD;">     http://backend_server</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#89DDFF;"> proxy_set_header </span><span style="color:#A6ACCD;">X-Forwarded-For </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">proxy_add_x_forwarded_for</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#89DDFF;"> proxy_set_header </span><span style="color:#A6ACCD;">Host </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">http_host</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#89DDFF;"> proxy_redirect </span><span style="color:#A6ACCD;">off</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#89DDFF;"> proxy_set_header </span><span style="color:#A6ACCD;">X-Real-IP  </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">remote_addr</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    }</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span></span>\n<span class="line"><span style="color:#A6ACCD;">  }</span></span>\n<span class="line"><span style="color:#A6ACCD;">}</span></span>\n<span class="line"></span></code></pre></div><p>接下来，我们仔细分析下Nginx各个模块的配置选项。</p><h2 id="nginx-location配置" tabindex="-1">Nginx Location配置 <a class="header-anchor" href="#nginx-location配置" aria-hidden="true">#</a></h2><p>Nginx Location配置是Nginx的核心配置，它负责匹配请求的url, 并根据Location里定义的规则来处理这个请求，比如拒绝、转发、重定向或直接提供文件下载。</p><h2 id="url匹配方式及优先级" tabindex="-1">URL匹配方式及优先级 <a class="header-anchor" href="#url匹配方式及优先级" aria-hidden="true">#</a></h2><p>Nginx的Location配置支持普通字符串匹配和正则匹配，不过url的各种匹配方式是有优先级的，如下所示：</p><table><thead><tr><th>匹配符</th><th>匹配规则</th><th>优先级</th></tr></thead><tbody><tr><td>=</td><td>精确匹配</td><td>1</td></tr><tr><td>^~</td><td>以某个字符串开头</td><td>2</td></tr><tr><td>~</td><td>区分大小写的正则匹配</td><td>3</td></tr><tr><td>~*</td><td>不区分大小写的正则匹配</td><td>4</td></tr><tr><td>!~</td><td>区分大小写的不匹配正则</td><td>5</td></tr><tr><td>!~*</td><td>不区分大小写的不匹配正则</td><td>6</td></tr><tr><td>/</td><td>通用匹配，任何请求都会匹配到</td><td>7</td></tr></tbody></table><p>为了加深你的理解，我们来看如下一个例子。由于规则2的优先级更高，当用户访问<code>/static/</code>或则<code>/static/123.html</code>时，Nginx会优先执行规则2里的操作，其它的的请求则会交由规则1执行。</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 规则1：通用匹配</span></span>\n<span class="line"><span style="color:#FFCB6B;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 规则2：处理以/static/开头的url</span></span>\n<span class="line"><span style="color:#FFCB6B;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">^~</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/static</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">{</span><span style="color:#A6ACCD;">                         </span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">alias</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/usr/share/nginx/html/static</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 静态资源路径</span></span>\n<span class="line"><span style="color:#A6ACCD;">}</span></span>\n<span class="line"></span></code></pre></div><p><strong>注意</strong>：上例中我们使用了<code>alias</code>别名设置了静态文件所在目录，我们还可以使用<code>root</code>指定静态文件目录。注意：<code>alias</code>和<code>root</code>是有区别的。</p><ul><li><code>root</code>对路径的处理：root路径 ＋ location路径</li><li><code>alias</code>对路径的处理：使用alias路径替换location路径</li></ul><p>如果用<code>root</code>设置静态文件资源路径，可以按如下代码设置。两者是等同的。</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 规则2：处理以/static/开头的url</span></span>\n<span class="line"><span style="color:#FFCB6B;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">^~</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/static</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">{</span><span style="color:#A6ACCD;">                         </span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">root</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/usr/share/nginx/html</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 静态资源路径</span></span>\n<span class="line"><span style="color:#A6ACCD;">}</span></span>\n<span class="line"></span></code></pre></div><p>Location还支持正则匹配，比如下例可以禁止用户访问所有的图片格式文件。</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 拒绝访问所有图片格式文件</span></span>\n<span class="line"><span style="color:#FFCB6B;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">~</span><span style="color:#A6ACCD;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">.</span><span style="color:#A6ACCD;">*</span><span style="color:#A6ACCD;">\\.</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">jpg</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">gif</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">png</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">jpeg</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">$ </span><span style="color:#C3E88D;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">deny</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">all</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">}</span></span>\n<span class="line"></span></code></pre></div><h2 id="请求转发和重定向" tabindex="-1">请求转发和重定向 <a class="header-anchor" href="#请求转发和重定向" aria-hidden="true">#</a></h2><p>另一个我们在Location块里经常配置的就是转发请求或重定向，如下例所示：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 转发动态请求</span></span>\n<span class="line"><span style="color:#FFCB6B;">server</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">{</span><span style="color:#A6ACCD;">  </span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">listen</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">80</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">                                                         </span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">server_name</span><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">localhost</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">                                               </span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">client_max_body_size</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">1024M</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">proxy_pass</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">http://localhost:</span><span style="color:#F78C6C;">8080</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">   </span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">proxy_set_header</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Host</span><span style="color:#A6ACCD;"> $host</span><span style="color:#C3E88D;">:</span><span style="color:#A6ACCD;">$server_port</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    }</span></span>\n<span class="line"><span style="color:#A6ACCD;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># http请求重定向到https请求</span></span>\n<span class="line"><span style="color:#FFCB6B;">server</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">listen</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">80</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">server_name</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">domain.com</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">301</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">https://</span><span style="color:#A6ACCD;">$server_name$request_uri</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">}</span></span>\n<span class="line"></span></code></pre></div><p>无论是转发请求还是重定向，我们都使用了以<code>$</code>符号开头的变量，这些都是Nginx提供的全局变量。它们的具体含义如下所示：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">$args, 请求中的参数</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">$content_length, HTTP请求信息里的</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Content-Length</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">$content_type, 请求信息里的</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Content-Type</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">$document_root, 针对当前请求的根路径设置值</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">$document_uri, 与$uri相同</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">$host, 请求信息中的</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Host</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">，如果请求中没有Host行，则等于设置的服务器名</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">$limit_rate, 对连接速率的限制</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">$request_method, 请求的方法，比如</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">GET</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">、</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">POST</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">等</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">$remote_addr, 客户端地址</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">$remote_port, 客户端端口号</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">$remote_user, 客户端用户名，认证用</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">$request_filename, 当前请求的文件路径名</span></span>\n<span class="line"><span style="color:#A6ACCD;">$request_body_file,当前请求的文件</span></span>\n<span class="line"><span style="color:#A6ACCD;">$request_uri, 请求的URI，带查询字符串</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">$query_string, 与$args相同</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">$scheme, 所用的协议，比如http或者是https，比如rewrite ^</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">.</span><span style="color:#FFCB6B;">+</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">$ $scheme://example.com</span><span style="color:#A6ACCD;font-style:italic;">$1</span><span style="color:#A6ACCD;"> redirect</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">$server_protocol, 请求的协议版本，</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">HTTP/1.0</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">或</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">HTTP/1.1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">$server_addr, 服务器地址</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">$server_name, 请求到达的服务器名</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">$server_port, 请求到达的服务器端口号</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">$uri, 请求的URI，可能和最初的值有不同，比如经过重定向之类的。</span></span>\n<span class="line"></span></code></pre></div><p>知道这些全局变量的含义后，我们就可以限制用户的请求方法。比如下例中配置了只允许用户通过POST方法访问，其他的请求方法则返回405。</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">$request_method </span><span style="color:#89DDFF;">!</span><span style="color:#FFCB6B;">~</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">^</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">GET</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">POST</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">$ </span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">405</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span></code></pre></div><h2 id="nginx静态文件配置" tabindex="-1">Nginx静态文件配置 <a class="header-anchor" href="#nginx静态文件配置" aria-hidden="true">#</a></h2><p>Nginx可直接作为强大的静态文件服务器使用，支持对静态文件进行缓存还可以直接将Nginx作为文件下载服务器使用。</p><h2 id="静态文件缓存" tabindex="-1">静态文件缓存 <a class="header-anchor" href="#静态文件缓存" aria-hidden="true">#</a></h2><p>缓存可以加快下次静态文件加载速度。我们很多与网站样式相关的文件比如css和js文件一般不怎么变化，缓存有效器可以通过<code>expires</code>选项设置得长一些。</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># 使用expires选项开启静态文件缓存，10天有效</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">~</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">^/</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">images</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">javascript</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">js</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">css</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">flash</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">media</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">static</span><span style="color:#89DDFF;">)</span><span style="color:#C3E88D;">/</span><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#FFCB6B;">root</span><span style="color:#A6ACCD;">    </span><span style="color:#C3E88D;">/var/www/big.server.com/static_files</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#FFCB6B;">expires</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">10d</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    }</span></span>\n<span class="line"></span></code></pre></div><h2 id="静态文件压缩" tabindex="-1">静态文件压缩 <a class="header-anchor" href="#静态文件压缩" aria-hidden="true">#</a></h2><p>Nginx可以对网站的css、js 、xml、html 文件在传输前进行压缩，大幅提高页面加载速度。经过Gzip压缩后页面大小可以变为原来的30%甚至更小。使用时仅需开启Gzip压缩功能即可。你可以在http全局块或server块增加这个配置。</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">http</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># 开启gzip压缩功能</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">gzip</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">on</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># 设置允许压缩的页面最小字节数; 这里表示如果文件小于10k，压缩没有意义.</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">gzip_min_length</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">10k</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># 设置压缩比率，最小为1，处理速度快，传输速度慢；</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># 9为最大压缩比，处理速度慢，传输速度快; 推荐6</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">gzip_comp_level</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">6</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># 设置压缩缓冲区大小，此处设置为16个8K内存作为压缩结果缓冲</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">gzip_buffers</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">16</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">8k</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># 设置哪些文件需要压缩,一般文本，css和js建议压缩。图片视需要要锁。</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">gzip_types</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">text/plain</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">text/css</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">application/json</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">application/x-javascript</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">text/xml</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">application/xml</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">application/xml+rss</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">text/javascript</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span></span>\n<span class="line"><span style="color:#A6ACCD;">} </span></span>\n<span class="line"></span></code></pre></div><h2 id="文件下载服务器" tabindex="-1">文件下载服务器 <a class="header-anchor" href="#文件下载服务器" aria-hidden="true">#</a></h2><p>Nginx也可直接做文件下载服务器使用，在location块设置<code>autoindex</code>相关选项即可。</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">server</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">{</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">listen</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">80</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">default_server</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">listen</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">::</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;">:80 </span><span style="color:#C3E88D;">default_server</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">server_name</span><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">_</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/download</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">{</span><span style="color:#A6ACCD;">    </span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#676E95;font-style:italic;"># 下载文件所在目录</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">root</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/usr/share/nginx/html</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#676E95;font-style:italic;"># 开启索引功能</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">autoindex</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">on</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">  </span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#676E95;font-style:italic;"># 关闭计算文件确切大小（单位bytes），只显示大概大小（单位kb、mb、gb）</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">autoindex_exact_size</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">off</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#676E95;font-style:italic;">#显示本机时间而非 GMT 时间</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">autoindex_localtime</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">on</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">   </span></span>\n<span class="line"><span style="color:#A6ACCD;">                </span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#676E95;font-style:italic;"># 对于txt和jpg文件，强制以附件形式下载，不要浏览器直接打开</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">$request_filename </span><span style="color:#89DDFF;">~*</span><span style="color:#A6ACCD;"> ^.</span><span style="color:#89DDFF;">*?</span><span style="color:#A6ACCD;">\\.</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">txt</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">jpg</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">png</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">$</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#FFCB6B;">add_header</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Content-Disposition</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">attachment</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#A6ACCD;">    }</span></span>\n<span class="line"><span style="color:#A6ACCD;">}</span></span>\n<span class="line"></span></code></pre></div><h2 id="nginx配置https" tabindex="-1">Nginx配置HTTPS <a class="header-anchor" href="#nginx配置https" aria-hidden="true">#</a></h2><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 负载均衡，设置HTTPS</span></span>\n<span class="line"><span style="color:#C792EA;">upstream</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">backend_server </span><span style="color:#A6ACCD;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">server</span><span style="color:#A6ACCD;"> APP_SERVER_1_IP;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">server</span><span style="color:#A6ACCD;"> APP_SERVER_2_IP;</span></span>\n<span class="line"><span style="color:#A6ACCD;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 禁止未绑定域名访问，比如通过ip地址访问</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 444:该网页无法正常运作，未发送任何数据</span></span>\n<span class="line"><span style="color:#C792EA;">server</span><span style="color:#A6ACCD;"> {</span></span>\n<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> listen </span><span style="color:#A6ACCD;">80</span><span style="color:#89DDFF;"> default_server;</span></span>\n<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> server_name </span><span style="color:#A6ACCD;">_</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">444</span><span style="color:#A6ACCD;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># HTTP请求重定向至HTTPS请求</span></span>\n<span class="line"><span style="color:#C792EA;">server</span><span style="color:#A6ACCD;"> {</span></span>\n<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> listen </span><span style="color:#A6ACCD;">80</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> listen </span><span style="color:#A6ACCD;">[::]:80</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> server_name </span><span style="color:#A6ACCD;">your_domain.com</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">/ </span><span style="color:#A6ACCD;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;"> proxy_set_header </span><span style="color:#A6ACCD;">X-Forwarded-For </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">proxy_add_x_forwarded_for</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;"> proxy_set_header </span><span style="color:#A6ACCD;">X-Forwarded-Proto </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">scheme</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;"> proxy_set_header </span><span style="color:#A6ACCD;">Host </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">http_host</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;"> proxy_redirect </span><span style="color:#A6ACCD;">off</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;"> proxy_pass </span><span style="color:#A6ACCD;">http://backend_server</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>\n<span class="line"><span style="color:#A6ACCD;">     }</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">301</span><span style="color:#A6ACCD;"> https://</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">server_name</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">request_uri;</span></span>\n<span class="line"><span style="color:#A6ACCD;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C792EA;">server</span><span style="color:#A6ACCD;"> {</span></span>\n<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> listen </span><span style="color:#A6ACCD;">443 ssl http2</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> listen </span><span style="color:#A6ACCD;">[::]:443 ssl http2</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> server_name </span><span style="color:#A6ACCD;">your_domain.com</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># ssl证书及密钥路径</span></span>\n<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> ssl_certificate </span><span style="color:#A6ACCD;">/path/to/your/fullchain.pem</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> ssl_certificate_key </span><span style="color:#A6ACCD;">/path/to/your/privkey.pem</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># SSL会话信息</span></span>\n<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> client_max_body_size </span><span style="color:#A6ACCD;">75MB</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> keepalive_timeout </span><span style="color:#A6ACCD;">10</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">/ </span><span style="color:#A6ACCD;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;"> proxy_set_header </span><span style="color:#A6ACCD;">X-Forwarded-For </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">proxy_add_x_forwarded_for</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;"> proxy_set_header </span><span style="color:#A6ACCD;">X-Forwarded-Proto </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">scheme</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;"> proxy_set_header </span><span style="color:#A6ACCD;">Host </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">http_host</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;"> proxy_redirect </span><span style="color:#A6ACCD;">off</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;"> proxy_pass </span><span style="color:#A6ACCD;">http://django</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># Django+uwsgi不在本机上，使用代理转发</span></span>\n<span class="line"><span style="color:#A6ACCD;">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">}</span></span>\n<span class="line"></span></code></pre></div><h2 id="nginx日志配置" tabindex="-1">Nginx日志配置 <a class="header-anchor" href="#nginx日志配置" aria-hidden="true">#</a></h2><p>Nginx的日志主要包括访问日志<code>access_log</code>和错误日志<code>error_log</code>，你还可以通过<code>log_format</code>定义日志格式。你可以在全局块，Server块或Location块定义日志。比如下例在http块中定义了一个名为<code>main</code>的日志格式，所有站点的日志都会按这个格式记录。</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">http</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 日志格式及access日志路径</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">log_format</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">main</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">$remote_addr - $remote_user [$time_local]  $status </span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">&#39;&quot;</span><span style="color:#A6ACCD;">$request</span><span style="color:#FFCB6B;">&quot;</span><span style="color:#A6ACCD;"> $body_bytes_sent </span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">$http_referer</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"><span style="color:#C3E88D;">    </span><span style="color:#89DDFF;">&#39;&quot;</span><span style="color:#A6ACCD;">$http_user_agent</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">$http_x_forwarded_for</span><span style="color:#89DDFF;">&quot;&#39;</span><span style="color:#C3E88D;">;</span></span>\n<span class="line"><span style="color:#C3E88D;">  access_log   logs/access.log  main;</span></span>\n<span class="line"><span style="color:#C3E88D;">}</span></span>\n<span class="line"></span></code></pre></div><p><code>access_log</code>文件随着访问记录增多有可能变得非常大，我们可以使用<code>access_log off</code>关闭一些不需要记录的访问。比如当一个站点没有设置favicon.ico时，<code>access_log</code>会记录了大量favicon.ico 404信息, 这是没有必要的, 可以按如下方式关闭访问日志记录。</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/favicon.ico</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">log_not_found</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">off</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">access_log</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">off</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 不在access_log记录该项访问</span></span>\n<span class="line"><span style="color:#A6ACCD;">}</span></span>\n<span class="line"></span></code></pre></div><h2 id="nginx超时设置" tabindex="-1">Nginx超时设置 <a class="header-anchor" href="#nginx超时设置" aria-hidden="true">#</a></h2><p>Nginx提供了很多超时设置选项，目的是保护服务器资源，CPU，内存并控制连接数。你可以根据实际项目需求在全局块、Server块和Location块进行配置。</p><h2 id="请求超时设置" tabindex="-1">请求超时设置 <a class="header-anchor" href="#请求超时设置" aria-hidden="true">#</a></h2><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 客户端连接保持会话超时时间，超过这个时间，服务器断开这个链接。</span></span>\n<span class="line"><span style="color:#FFCB6B;">keepalive_timeout</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">60</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 设置请求头的超时时间，可以设置低点。</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 如果超过这个时间没有发送任何数据，nginx将返回request time out的错误。</span></span>\n<span class="line"><span style="color:#FFCB6B;">client_header_timeout</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">15</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 设置请求体的超时时间，可以设置低点。</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 如果超过这个时间没有发送任何数据，nginx将返回request time out的错误。</span></span>\n<span class="line"><span style="color:#FFCB6B;">client_body_timeout</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">15</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 响应客户端超时时间</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 如果超过这个时间，客户端没有任何活动，nginx关闭连接。</span></span>\n<span class="line"><span style="color:#FFCB6B;">send_timeout</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">15</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 上传文件大小限制</span></span>\n<span class="line"><span style="color:#FFCB6B;">client_max_body_size</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">10m</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 也是防止网络阻塞，不过要包涵在keepalived参数才有效。</span></span>\n<span class="line"><span style="color:#FFCB6B;">tcp_nodelay</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">on</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 客户端请求头部的缓冲区大小，这个可以根据你的系统分页大小来设置。</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 一般一个请求头的大小不会超过 1k，不过由于一般系统分页都要大于1k</span></span>\n<span class="line"><span style="color:#FFCB6B;">client_header_buffer_size</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">2k</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 这个将为打开文件指定缓存，默认是没有启用的。</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># max指定缓存数量，建议和打开文件数一致，inactive 是指经过多长时间文件没被请求后删除缓存。</span></span>\n<span class="line"><span style="color:#FFCB6B;">open_file_cache</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">max=</span><span style="color:#F78C6C;">102400</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">inactive=20s</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 这个是指多长时间检查一次缓存的有效信息。</span></span>\n<span class="line"><span style="color:#FFCB6B;">open_file_cache_valid</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">30s</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 告诉nginx关闭不响应的客户端连接。这将会释放那个客户端所占有的内存空间。</span></span>\n<span class="line"><span style="color:#FFCB6B;">reset_timedout_connection</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">on</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"></span></code></pre></div><h2 id="proxy反向代理超时设置" tabindex="-1">Proxy反向代理超时设置 <a class="header-anchor" href="#proxy反向代理超时设置" aria-hidden="true">#</a></h2><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 该指令设置与upstream服务器的连接超时时间，这个超时建议不超过75秒。</span></span>\n<span class="line"><span style="color:#FFCB6B;">proxy_connect_timeout</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">60</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 该指令设置应用服务器的响应超时时间，默认60秒。</span></span>\n<span class="line"><span style="color:#FFCB6B;">proxy_read_timeout</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">60</span><span style="color:#C3E88D;">；</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 设置了发送请求给upstream服务器的超时时间</span></span>\n<span class="line"><span style="color:#FFCB6B;">proxy_send_timeout</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">60</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># max_fails设定Nginx与upstream服务器通信的尝试失败的次数。</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 在fail_timeout参数定义的时间段内，如果失败的次数达到此值，Nginx就认为服务器不可用。</span></span>\n<span class="line"><span style="color:#FFCB6B;">upstream</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">big_server_com</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#FFCB6B;">server</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">192.168.0.1:</span><span style="color:#F78C6C;">8000</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">weight=</span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">max_fails=</span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">fail_timeout=30s</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># weight越高，权重越大</span></span>\n<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#FFCB6B;">server</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">192.168.0.2:</span><span style="color:#F78C6C;">8000</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">weight=</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">max_fails=</span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">fail_timeout=30s</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#FFCB6B;">server</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">192.168.0.3:</span><span style="color:#F78C6C;">8000</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#FFCB6B;">server</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">192.168.0.4:</span><span style="color:#F78C6C;">8001</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">backup</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 热备</span></span>\n<span class="line"><span style="color:#A6ACCD;">}</span></span>\n<span class="line"></span></code></pre></div><h2 id="nginx负载均衡" tabindex="-1">Nginx负载均衡 <a class="header-anchor" href="#nginx负载均衡" aria-hidden="true">#</a></h2><p>Nginx提供了多种负载均衡算法, 最常见的有5种。我们只需修改对应upstream模块即可。</p><h2 id="轮询-默认" tabindex="-1">轮询(默认) <a class="header-anchor" href="#轮询-默认" aria-hidden="true">#</a></h2><p>每个请求按时间顺序逐一分配到不同的后端服务器，如果后端服务器down掉，能自动剔除;</p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 轮询，大家权重一样</span></span>\n<span class="line"><span style="color:#C792EA;">upstream</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">backend_server </span><span style="color:#A6ACCD;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">server</span><span style="color:#A6ACCD;"> 192.168.0.1:8000;</span></span>\n<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">server</span><span style="color:#A6ACCD;"> 192.168.0.2:8000;</span></span>\n<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">server</span><span style="color:#A6ACCD;"> 192.168.0.3:8000 down; </span><span style="color:#676E95;font-style:italic;"># 不参与负载均衡</span></span>\n<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">server</span><span style="color:#A6ACCD;"> 192.168.0.4:8001 backup; </span><span style="color:#676E95;font-style:italic;"># 热备</span></span>\n<span class="line"><span style="color:#A6ACCD;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C792EA;">server</span><span style="color:#A6ACCD;"> {</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;"> listen </span><span style="color:#A6ACCD;">         </span><span style="color:#F78C6C;">80</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;"> server_name </span><span style="color:#A6ACCD;">    big.server.com</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;"> access_log </span><span style="color:#A6ACCD;">     logs/big.server.access.log</span><span style="color:#89DDFF;"> main;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;"> charset </span><span style="color:#A6ACCD;">utf-8</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;"> client_max_body_size </span><span style="color:#A6ACCD;">10M</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 限制用户上传文件大小，默认1M</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#C792EA;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">/ </span><span style="color:#A6ACCD;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#676E95;font-style:italic;"># 使用proxy_pass转发请求到通过upstream定义的一组应用服务器</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;"> proxy_pass </span><span style="color:#A6ACCD;">     http://backend_server</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;"> proxy_set_header </span><span style="color:#A6ACCD;">X-Forwarded-For </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">proxy_add_x_forwarded_for</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;"> proxy_set_header </span><span style="color:#A6ACCD;">Host </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">http_host</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;"> proxy_redirect </span><span style="color:#A6ACCD;">off</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;"> proxy_set_header </span><span style="color:#A6ACCD;">X-Real-IP  </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">remote_addr</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">   }</span></span>\n<span class="line"></span></code></pre></div><h2 id="权重-weight" tabindex="-1">权重(weight) <a class="header-anchor" href="#权重-weight" aria-hidden="true">#</a></h2><p>通过weight指定轮询几率，访问比率与weight成正比，常用于后端服务器性能不均的情况。不怎么忙的服务器可以多承担些任务。</p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 权重，weight越大，承担任务越多</span></span>\n<span class="line"><span style="color:#C792EA;">upstream</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">backend_server </span><span style="color:#A6ACCD;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">server</span><span style="color:#A6ACCD;"> 192.168.0.1:8000 </span><span style="color:#A6ACCD;font-style:italic;">weight</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">   server 192.168.0.2:8000 </span><span style="color:#A6ACCD;font-style:italic;">weight</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">}</span></span>\n<span class="line"></span></code></pre></div><h2 id="ip-hash" tabindex="-1">ip_hash <a class="header-anchor" href="#ip-hash" aria-hidden="true">#</a></h2><p>每个请求按访问ip的hash结果分配，这样每个访客固定访问一个后端服务器，可以解决session的问题。</p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 权重，weight越大，承担任务越多</span></span>\n<span class="line"><span style="color:#C792EA;">upstream</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">backend_server </span><span style="color:#A6ACCD;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">ip_hash;</span></span>\n<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">server</span><span style="color:#A6ACCD;"> 192.168.0.1:8000;</span></span>\n<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">server</span><span style="color:#A6ACCD;"> 192.168.0.2:8000;</span></span>\n<span class="line"><span style="color:#A6ACCD;">}</span></span>\n<span class="line"></span></code></pre></div><h2 id="url-hash" tabindex="-1">url_hash <a class="header-anchor" href="#url-hash" aria-hidden="true">#</a></h2><p>按访问url的hash结果来分配请求，使每个url定向到同一个后端服务器，后端服务器为缓存时比较有效。</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># URL Hash</span></span>\n<span class="line"><span style="color:#FFCB6B;">upstream</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">backend_server</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#82AAFF;">hash</span><span style="color:#A6ACCD;"> $request_uri</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#FFCB6B;">server</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">192.168.0.1:</span><span style="color:#F78C6C;">8000</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#FFCB6B;">server</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">192.168.0.2:</span><span style="color:#F78C6C;">8000</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">}</span></span>\n<span class="line"></span></code></pre></div><h2 id="fair-第三方" tabindex="-1">fair(第三方) <a class="header-anchor" href="#fair-第三方" aria-hidden="true">#</a></h2><p>按后端服务器的响应时间来分配请求，响应时间短的优先分配。使用这个算法需要安装<code>nginx-upstream-fair</code>这个库。</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># Fair</span></span>\n<span class="line"><span style="color:#FFCB6B;">upstream</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">backend_server</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#FFCB6B;">server</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">192.168.0.1:</span><span style="color:#F78C6C;">8000</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#FFCB6B;">server</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">192.168.0.2:</span><span style="color:#F78C6C;">8000</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#FFCB6B;">fair</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">}</span></span>\n<span class="line"></span></code></pre></div><h2 id="nginx与uwsgi服务器的沟通" tabindex="-1">Nginx与uWSGI服务器的沟通 <a class="header-anchor" href="#nginx与uwsgi服务器的沟通" aria-hidden="true">#</a></h2><p>在前面的案例中，Nginx都是使用<code>proxy_pass</code>转发的动态请求，<code>proxy_pass</code>使用普通的HTTP协议与应用服务器进行沟通。如果你部署的是Python Web应用(Django, Flask), 你的应用服务器(<code>uwsgi</code>, <code>gunicorn</code>)一般是遵守uwsgi协议的，对于这种情况，建议使用<code>uwsgi_pass</code>转发请求。</p><h3 id="python-web应用部署负载均衡nginx配置文件参考" tabindex="-1">Python Web应用部署负载均衡Nginx配置文件参考 <a class="header-anchor" href="#python-web应用部署负载均衡nginx配置文件参考" aria-hidden="true">#</a></h3><p>如果你部署的是Django或则Flask Web应用，一个完整的nginx配置文件如下所示：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># nginx配置文件，nginx.conf</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 全局块</span></span>\n<span class="line"><span style="color:#FFCB6B;">user</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">www-data</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#FFCB6B;">worker_processes</span><span style="color:#A6ACCD;">  </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">## 默认1，一般建议设成CPU核数1-2倍</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># Events块</span></span>\n<span class="line"><span style="color:#FFCB6B;">events</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;"># 使用epoll的I/O 模型处理轮询事件。</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;"># 可以不设置，nginx会根据操作系统选择合适的模型</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">use</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">epoll</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;"># 工作进程的最大连接数量, 默认1024个</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">worker_connections</span><span style="color:#A6ACCD;">  </span><span style="color:#F78C6C;">2048</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;"># http层面的keep-alive超时时间</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">keepalive_timeout</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">60</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span></span>\n<span class="line"><span style="color:#A6ACCD;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#FFCB6B;">http</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">{</span><span style="color:#A6ACCD;">    </span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># 开启gzip压缩功能</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">gzip</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">on</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># 设置允许压缩的页面最小字节数; 这里表示如果文件小于10k，压缩没有意义.</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">gzip_min_length</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">10k</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># 设置压缩比率，最小为1，处理速度快，传输速度慢；</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># 9为最大压缩比，处理速度慢，传输速度快; 推荐6</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">gzip_comp_level</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">6</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># 设置压缩缓冲区大小，此处设置为16个8K内存作为压缩结果缓冲</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">gzip_buffers</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">16</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">8k</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># 设置哪些文件需要压缩,一般文本，css和js建议压缩。图片视需要要锁。</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">gzip_types</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">text/plain</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">text/css</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">application/json</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">application/x-javascript</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">text/xml</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">application/xml</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">application/xml+rss</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">text/javascript</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">upstream</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">backend_server</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">server</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">192.168.0.1:</span><span style="color:#F78C6C;">8000</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 替换成应用服务器或容器实际IP及端口</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">server</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">192.168.0.2:</span><span style="color:#F78C6C;">8000</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">server</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">listen</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">80</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 监听80端口</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">server_name</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">localhost</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 可以是nginx容器所在ip地址或127.0.0.1，不能写宿主机外网ip地址</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">charset</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">utf-</span><span style="color:#F78C6C;">8</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">client_max_body_size</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">10M</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 限制用户上传文件大小</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span></span>\n<span class="line"><span style="color:#A6ACCD;">         </span><span style="color:#676E95;font-style:italic;"># 客户端请求头部的缓冲区大小</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">client_header_buffer_size</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">2k</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">client_header_timeout</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">15</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">client_body_timeout</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">15</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">access_log</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/var/log/nginx/mysite1.access.log</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">main</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">error_log</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/var/log/nginx/mysite1.error.log</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">warn</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#676E95;font-style:italic;"># 静态资源路径</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/static</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#82AAFF;">alias</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/usr/share/nginx/html/static</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">}</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#676E95;font-style:italic;"># 媒体资源路径，用户上传文件路径</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/media</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#82AAFF;">alias</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/usr/share/nginx/html/media</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">        }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">{</span><span style="color:#A6ACCD;">     </span></span>\n<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#FFCB6B;">include</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/etc/nginx/uwsgi_params</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#FFCB6B;">uwsgi_pass</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">backend_server</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">   </span><span style="color:#676E95;font-style:italic;"># 使用uwsgi_pass, 而不是proxy_pass</span></span>\n<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#FFCB6B;">uwsgi_read_timeout</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">600</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 指定接收uWSGI应答的超时时间</span></span>\n<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#FFCB6B;">uwsgi_connect_timeout</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">600</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;"># 指定连接到后端uWSGI的超时时间。</span></span>\n<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#FFCB6B;">uwsgi_send_timeout</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">600</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 指定向uWSGI传送请求的超时时间</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#FFCB6B;">proxy_set_header</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">X-Forwarded-For</span><span style="color:#A6ACCD;"> $proxy_add_x_forwarded_for</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#FFCB6B;">proxy_set_header</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Host</span><span style="color:#A6ACCD;"> $http_host</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#FFCB6B;">proxy_redirect</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">off</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#FFCB6B;">proxy_set_header</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">X-Real-IP</span><span style="color:#A6ACCD;">  $remote_addr</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">        }</span></span>\n<span class="line"><span style="color:#A6ACCD;">    }</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span></span>\n<span class="line"><span style="color:#A6ACCD;">} </span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span></code></pre></div><p>如果你的nginx与uwsgi在同一台服务器上，用不到负载均衡，你还可以通过本地机器的unix socket进行通信，这样速度更快，如下所示：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">{</span><span style="color:#A6ACCD;">     </span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">include</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/etc/nginx/uwsgi_params</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">uwsgi_pass</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">unix:/run/uwsgi/django_test1.sock</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">}</span></span>\n<span class="line"></span></code></pre></div><p><strong>注意</strong>：取决于Nginx采用那种方式与uWSGI服务器进行通信(本地socket, 网络TCP socket和http协议)，uWSGI的配置文件也会有所不同。这里以<code>uwsgi.ini</code>为例展示了不同。</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># uwsgi.ini配置文件</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 对于uwsgi_pass转发的请求，使用本地unix socket通信</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 仅适用于nginx和uwsgi在同一台服务器上的情形</span></span>\n<span class="line"><span style="color:#A6ACCD;">socket</span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;">/run/uwsgi/django_test1.sock</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 对于uwsgi_pass转发的请求，使用TCP socket通信</span></span>\n<span class="line"><span style="color:#A6ACCD;">socket</span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;">0.0.0.0:</span><span style="color:#F78C6C;">8000</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 对于proxy_pass HTTP转发的请求，使用http协议</span></span>\n<span class="line"><span style="color:#A6ACCD;">http</span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;">0.0.0.0:</span><span style="color:#F78C6C;">8000</span></span>\n<span class="line"></span></code></pre></div><h2 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-hidden="true">#</a></h2><p><strong>环境:CentOS Linux release 7.5.1804 (Core)</strong><strong>阿里云 服务器</strong></p><table><thead><tr><th>代码</th><th>注释</th></tr></thead><tbody><tr><td>sudo yum install nginx</td><td>安装nginx</td></tr><tr><td>sudo systemctl enable nginx</td><td>设置开机启动</td></tr><tr><td>sudo systemctl start nginx</td><td>启动服务</td></tr><tr><td>sudo systemctl stop nginx</td><td>停止服务</td></tr><tr><td>sudo systemctl restart nginx</td><td>重启服务</td></tr><tr><td>sudo systemctl reload nginx</td><td>重新加载，因为一般重新配置之后，不希望重启服务，这时可以使用重新加载。</td></tr><tr><td>sudo nginx -t</td><td>验证配置文件是否有语法错误</td></tr><tr><td>sudo systemctl status nginx</td><td>查看 nginx 状态</td></tr></tbody></table><h2 id="默认-nginx-目录路径。" tabindex="-1">默认 nginx 目录路径。 <a class="header-anchor" href="#默认-nginx-目录路径。" aria-hidden="true">#</a></h2><ul><li><p>/var/log/nginx/ ：日志文件目录，通常包含<code>access.log</code>和<code>error.log</code>两个主日志文件，以及各个站点的日志。</p></li><li><p>/etc/nginx/：配置文件目录。</p></li><li><p>/etc/nginx/sites-available/：所有站点的配置文件目录。</p></li><li><p>/etc/nginx/sites-enabled/：生效站点的配置文件目录，通常是<code>/etc/nginx/sites-available/</code>对应文件的软连接。</p></li><li><p>/etc/nginx/nginx.conf：主配置文件。</p></li></ul><h2 id="我的nginx配置" tabindex="-1">我的nginx配置 <a class="header-anchor" href="#我的nginx配置" aria-hidden="true">#</a></h2><p><strong>一个域名作为默认网址</strong></p><p><strong>解析的一个域名作为api接口</strong></p><p><strong>分别配置了接口转发和https代理</strong></p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># For more information on configuration, see:</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">#   * Official English Documentation: http://nginx.org/en/docs/</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">#   * Official Russian Documentation: http://nginx.org/ru/docs/</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">user </span><span style="color:#A6ACCD;">nginx</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#89DDFF;">worker_processes </span><span style="color:#A6ACCD;">auto</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#89DDFF;">error_log </span><span style="color:#A6ACCD;">/var/log/nginx/error.log</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#89DDFF;">pid </span><span style="color:#A6ACCD;">/run/nginx.pid</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C792EA;">events</span><span style="color:#A6ACCD;"> {</span></span>\n<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> worker_connections </span><span style="color:#A6ACCD;">1024</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">}</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C792EA;">http</span><span style="color:#A6ACCD;"> {</span></span>\n<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> log_format  main</span><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">&#39;</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">remote_addr</span><span style="color:#C3E88D;"> - </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">remote_user</span><span style="color:#C3E88D;"> [</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">time_local</span><span style="color:#C3E88D;">] &quot;</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">request</span><span style="color:#C3E88D;">&quot; &#39;</span></span>\n<span class="line"><span style="color:#A6ACCD;">                      </span><span style="color:#C3E88D;">&#39;</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">status</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">body_bytes_sent</span><span style="color:#C3E88D;"> &quot;</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">http_referer</span><span style="color:#C3E88D;">&quot; &#39;</span></span>\n<span class="line"><span style="color:#A6ACCD;">                      </span><span style="color:#C3E88D;">&#39;&quot;</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">http_user_agent</span><span style="color:#C3E88D;">&quot; &quot;</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">http_x_forwarded_for</span><span style="color:#C3E88D;">&quot;&#39;</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> access_log </span><span style="color:#A6ACCD;"> /var/log/nginx/access.log </span><span style="color:#89DDFF;"> main;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> sendfile </span><span style="color:#A6ACCD;">          </span><span style="color:#89DDFF;"> on;</span></span>\n<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> tcp_nopush </span><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;"> on;</span></span>\n<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> tcp_nodelay </span><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;"> on;</span></span>\n<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> keepalive_timeout </span><span style="color:#A6ACCD;">  </span><span style="color:#F78C6C;">65</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> types_hash_max_size </span><span style="color:#A6ACCD;">2048</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> include </span><span style="color:#A6ACCD;">            /etc/nginx/mime.types</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> default_type </span><span style="color:#A6ACCD;">       application/octet-stream</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#C792EA;">server</span><span style="color:#A6ACCD;"> {</span></span>\n<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;"> listen </span><span style="color:#A6ACCD;">      </span><span style="color:#F78C6C;">80</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;"> server_name </span><span style="color:#A6ACCD;"> www.xxx.com</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">/ </span><span style="color:#A6ACCD;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">           </span><span style="color:#89DDFF;"> proxy_set_header </span><span style="color:#A6ACCD;">X-Forwarded-For </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">proxy_add_x_forwarded_for</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">           </span><span style="color:#89DDFF;"> proxy_set_header </span><span style="color:#A6ACCD;">Host </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">http_host</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">           </span><span style="color:#89DDFF;"> proxy_set_header </span><span style="color:#A6ACCD;">X-NginX-Proxy</span><span style="color:#89DDFF;"> true;</span></span>\n<span class="line"><span style="color:#A6ACCD;">           </span><span style="color:#89DDFF;"> proxy_http_version </span><span style="color:#A6ACCD;">1.1</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">           </span><span style="color:#89DDFF;"> proxy_set_header </span><span style="color:#A6ACCD;">Upgrade </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">http_upgrade</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">           </span><span style="color:#89DDFF;"> proxy_set_header </span><span style="color:#A6ACCD;">Connection </span><span style="color:#C3E88D;">&quot;upgrade&quot;</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">           </span><span style="color:#89DDFF;"> proxy_max_temp_file_size </span><span style="color:#A6ACCD;">0</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">           </span><span style="color:#89DDFF;"> proxy_pass </span><span style="color:#A6ACCD;">http://127.0.0.1:3000/</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">           </span><span style="color:#89DDFF;"> proxy_redirect </span><span style="color:#A6ACCD;">off</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">           </span><span style="color:#89DDFF;"> proxy_read_timeout </span><span style="color:#A6ACCD;">240s</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">        }</span></span>\n<span class="line"><span style="color:#A6ACCD;">       </span></span>\n<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;"> error_page </span><span style="color:#A6ACCD;">404 /404.html</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#C792EA;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/40x.html </span><span style="color:#A6ACCD;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">        }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;"> error_page </span><span style="color:#A6ACCD;">500 </span><span style="color:#F78C6C;">502</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">503</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">504</span><span style="color:#A6ACCD;"> /50x.html</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#C792EA;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/50x.html </span><span style="color:#A6ACCD;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">        }</span></span>\n<span class="line"><span style="color:#A6ACCD;">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">server</span><span style="color:#A6ACCD;"> {</span></span>\n<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;"> listen </span><span style="color:#A6ACCD;">443</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;"> server_name </span><span style="color:#A6ACCD;">www.xxx.com</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;"> ssl </span><span style="color:#A6ACCD;">on</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;"> ssl_certificate </span><span style="color:#A6ACCD;"> /root/web/Blog/cert/xxx.pem</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;"> ssl_certificate_key </span><span style="color:#A6ACCD;">/root/web/Blog/cert/xxx.key</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;"> ssl_session_timeout </span><span style="color:#A6ACCD;">5m</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;"> ssl_ciphers </span><span style="color:#A6ACCD;">ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;"> ssl_protocols </span><span style="color:#A6ACCD;">TLSv1 TLSv1.1 TLSv1.2</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;"> ssl_prefer_server_ciphers </span><span style="color:#A6ACCD;">on</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">/ </span><span style="color:#A6ACCD;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#89DDFF;"> proxy_set_header </span><span style="color:#A6ACCD;">X-Forwarded-For </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">proxy_add_x_forwarded_for</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">           </span><span style="color:#89DDFF;"> proxy_set_header </span><span style="color:#A6ACCD;">Host </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">http_host</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">           </span><span style="color:#89DDFF;"> proxy_set_header </span><span style="color:#A6ACCD;">X-NginX-Proxy</span><span style="color:#89DDFF;"> true;</span></span>\n<span class="line"><span style="color:#A6ACCD;">           </span><span style="color:#89DDFF;"> proxy_http_version </span><span style="color:#A6ACCD;">1.1</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">           </span><span style="color:#89DDFF;"> proxy_set_header </span><span style="color:#A6ACCD;">Upgrade </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">http_upgrade</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">           </span><span style="color:#89DDFF;"> proxy_set_header </span><span style="color:#A6ACCD;">Connection </span><span style="color:#C3E88D;">&quot;upgrade&quot;</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">           </span><span style="color:#89DDFF;"> proxy_max_temp_file_size </span><span style="color:#A6ACCD;">0</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">           </span><span style="color:#89DDFF;"> proxy_pass </span><span style="color:#A6ACCD;">http://127.0.0.1:3000/</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">           </span><span style="color:#89DDFF;"> proxy_redirect </span><span style="color:#A6ACCD;">off</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">           </span><span style="color:#89DDFF;"> proxy_read_timeout </span><span style="color:#A6ACCD;">240s</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">        }</span></span>\n<span class="line"><span style="color:#A6ACCD;">      }</span></span>\n<span class="line"><span style="color:#A6ACCD;">     </span></span>\n<span class="line"><span style="color:#A6ACCD;">}</span></span>\n<span class="line"></span>\n<span class="line"></span></code></pre></div>',100)];const t=s(o,[["render",function(s,l,p,o,t,c){return n(),a("div",null,e)}]]);export{p as __pageData,t as default};
