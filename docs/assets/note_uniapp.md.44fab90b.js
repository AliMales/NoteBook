/**
 * name: note-book
 * version: v1.0.9
 * description: 笔记本 📚  世界上只有10类人：一类是懂二进制的，一类是不懂的。
 * author: Alimales <only_tigerhu@163.com>
 * homepage: https://www.tigerzh.com
 */
import{_ as s,o as a,c as n,a as p}from"./app.a5d386c5.js";const l=JSON.parse('{"title":"uniapp","description":"","frontmatter":{},"headers":[],"relativePath":"note/uniapp.md"}'),e={name:"note/uniapp.md"},o=[p('<h1 id="uniapp" tabindex="-1">uniapp <a class="header-anchor" href="#uniapp" aria-hidden="true">#</a></h1><p><strong>数字天堂</strong></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">uniapp 是数字天堂（Dcloud）推行的跨终端解决方案。</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p><strong>uniapp</strong></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">如果把跨终端想象为响应式布局的话，那么解决方案为两种。</span></span>\n<span class="line"><span style="color:#A6ACCD;">1.每种设备生成对应的布局</span></span>\n<span class="line"><span style="color:#A6ACCD;">2.通过程序判断设备的类型给出对用的布局</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span>\n<span class="line"><span style="color:#A6ACCD;">Dcloud 很早之前我接触过。了解封装原声生接口的开发人员能明白封装一个api是多么不容易。</span></span>\n<span class="line"><span style="color:#A6ACCD;">Dcloud封装了40万+的原声api！</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">今天我学习了一期uniapp相关课程。里面的细节问题有很多。</span></span>\n<span class="line"><span style="color:#A6ACCD;">开发者只需要专注vue的开发是一种提高生产率的框架</span></span>\n<span class="line"><span style="color:#A6ACCD;">在框架中开发者只需要注重一种语言</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span>\n<span class="line"><span style="color:#A6ACCD;">更像是在框架层次再次封装的更便于使用的API所有的成本在第三方</span></span>\n<span class="line"><span style="color:#A6ACCD;">是开发者上层的一种框架</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span>\n<span class="line"><span style="color:#A6ACCD;">1.在百花齐放的生态中制定一种底层稳定性规范</span></span>\n<span class="line"><span style="color:#A6ACCD;">2.对这种规范进行测试</span></span>\n<span class="line"><span style="color:#A6ACCD;">3.对api分类对几大类</span></span>\n<span class="line"><span style="color:#A6ACCD;">4.对使用频率高的进行深度封装，使用不是那么频繁的api全部暴露</span></span>\n<span class="line"><span style="color:#A6ACCD;">5.不同平台进行差异封装</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div>',6)];const c=s(e,[["render",function(s,p,l,e,c,t){return a(),n("div",null,o)}]]);export{l as __pageData,c as default};
